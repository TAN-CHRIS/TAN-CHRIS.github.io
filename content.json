{"meta":{"title":"Seven's Blog","subtitle":"人丑就要多读书","description":"多努力一点总是没错的","author":"Seven","url":"http://tanchris.cc","root":"/"},"pages":[{"title":"关于","date":"2019-05-08T11:45:02.000Z","updated":"2019-05-23T15:44:20.311Z","comments":false,"path":"about/index.html","permalink":"http://tanchris.cc/about/index.html","excerpt":"","text":"🌟 hello to my world 🌟 email : tanchris881@gmail.com weibo : chris 陈去病 github : tanchris"}],"posts":[{"title":"MacOS install apache+Mysql+php+phpMyadmin","slug":"apache-Mysql-php-phpMyadmin","date":"2019-05-24T07:52:41.000Z","updated":"2019-05-27T07:41:47.975Z","comments":true,"path":"apache-Mysql-php-phpMyadmin/","link":"","permalink":"http://tanchris.cc/apache-Mysql-php-phpMyadmin/","excerpt":"","text":"\b由于数据库的课必须要使用到 mysql 和 php ，所以不得不\b自己配置环境，过程可谓是百般波折\b，最终\b通过 Youtube 成功配置。 启用 apache在MacOS中，apache已经被预先安装好了，所以我们只需要启动它就好了。 在终端中，使用 sudo apachectl start 命令打开apache服务 123sudo apachectl start # 启动apachesudo apachectl restart # 重新启动sudo apachectl stop # 关闭apache 启动后，打开浏览器输入localhost,界面显示 It Works! 表示\bapache启用成功。 配置php启用打开 Finder ➔ \b前往 ➔ 前往文件夹，输入/Library/WebServer/Documents如果是初次配置应该会看到该\b文件夹里有三个文件，index.html.en和两张图片 现在在终端中输入下面命令并输入密码1sudo nano /etc/apache2/httpd.conf 进入配置文件 找到 #LoadModule php7_module libexec/apache2/libphp7.so 这一行，删除\b最前面的# 接着，找到图中的三行 \b改为123&lt;IfModule dir_module&gt; DirectoryIndex index.php index.html&lt;/IfModule&gt; 使用 control+O 保存, enter 回车，control+X 退出 到这一步，我们已经完成了 apache+PHP 的基本配置 终端输入sudo apachectl restart重新启用apache 开启访问权限\b\b更改Documents文件\b夹的访问权限 Finder ➔ \b前往 ➔ 前往文件夹输入/Library/WebServer,前往，\b右击Documents选择 显示简介，点击\b右下角的🔒并输入密码，将wheel和everyone的权限都改为读和写 现在你可以删除 Documents 文件夹下的两张图片，它们不会再被使用到。 新建index.php现在再终端中输入下面命令并回车 1sudo nano /Library/Webserver/Documents/index.php 这条命令表示在Documents目录下新建了一个php文档，进入界面应该是空白的，输入\b下面\b代码1&lt;?php phpinfo(); ?&gt; 然后使用 control+O 保存, enter 回车，control+X 退出 现在你可以删除Documents目录下除了index.php外的所有文件了 在浏览器中刷新localhost界面，显示如图所示 如果页面没有刷新，可以尝试重新启动apache服务或等待一会应该就好了 安装Mysql安装进入Mysql下载页面选择DMG下载安装在安装的最后一步一定不要关闭页面！！！安装完成之后会弹出一个对话框，告诉我们生成了一个root账户的临时密码。请注意保存，否则重设密码会比较麻烦。 复制圈中的密码到记事本后面会用到 终端执行12sudo mkdir /var/mysqlsudo ln -s /tmp/mysql.sock /var/mysql/mysql.sock #creat a short link for Mysql which is needed for phpMyadmin 打开系统\b偏好设置，在底部可以看到新的\bmysql图标，点击图标，开启mysql 测试回到终端，输入 12cd /usr/local/mysql/binsudo ./mysql -u root -p 然后先输入电脑密码，接着再根据提示输入刚刚安装mysql结束时\b复制的临时mysql密码，就可以进入mysql了。 然后我们需要更改密码，\b继续输入 12mysql&gt; Alter user 'root'@'localhost' identified by 'password';mysql&gt; exit #退出 \bpassword换成自己想设定的密码就可以 \b下载phpMyadmin首先进入\b官网下载 解压\b之后将文件夹放到前面讲到的Documents文件夹\b下，并重新命名为phpmyadmin \b在终端输入1234$ cd /Library/WebServer/Documents/Documents chris$ cd phpMyAdmin/phpMyAdmin chris$ sudo mkdir configphpMyAdmin chris$ sudo chmod o+x config 现在打开浏览器输入 localhost/phpmyadmin/setup新增server 下载配置文件将\b配置文件 config.inc.php 放入 phpmyadmin 文件夹里 现在我们就可以在浏览器中输入 localhost/phpmyadmin 通过\b使用者账号和密码登入了。默认账户名称为root，也可以自己新增\b账户 到此我们的配置工作就全部完成了✅最后附上原视频的链接，可以翻墙的小伙伴可以看视频配置。Install Full Webserver (Apache, PHP, MySQL, phpMyAdmin) | macOS \b新增账户以及其他本地连接下次再写～","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[{"name":"mac","slug":"mac","permalink":"http://tanchris.cc/tags/mac/"},{"name":"php","slug":"php","permalink":"http://tanchris.cc/tags/php/"},{"name":"apache","slug":"apache","permalink":"http://tanchris.cc/tags/apache/"},{"name":"mysql","slug":"mysql","permalink":"http://tanchris.cc/tags/mysql/"}]},{"title":"hexo g 报错","slug":"hexo g报错","date":"2019-05-18T14:38:32.000Z","updated":"2019-05-27T07:42:19.175Z","comments":true,"path":"hexo g报错/","link":"","permalink":"http://tanchris.cc/hexo g报错/","excerpt":"使用hexo g报错","text":"使用hexo g报错 错误提示： 解决办法： 将hexo根目录下_config.yml配置文件中 highlight选项的auto_detect设为false 12345highlight: enable: true line_number: true auto_detect: false tab_replace: 参考链接：https://github.com/hexojs/hexo/issues/1627","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://tanchris.cc/tags/hexo/"}]},{"title":"添加Disqus评论失败解决办法","slug":"添加Disqus评论失败解决办法","date":"2019-05-18T14:21:03.000Z","updated":"2019-05-27T07:43:38.621Z","comments":true,"path":"添加Disqus评论失败解决办法/","link":"","permalink":"http://tanchris.cc/添加Disqus评论失败解决办法/","excerpt":"","text":"错误提示： 解决办法：在 hexo 根目录下的_config.yml配置文件中，这段代码： 123456# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: http://tanchris.ccroot: /permalink: :title/permalink_defaults: 把url填成自己的网站地址，一定加上http://不然就会报错。","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://tanchris.cc/tags/hexo/"}]},{"title":"Mysql基础语法","slug":"Mysql基础语法","date":"2019-05-15T02:15:54.000Z","updated":"2019-05-27T07:42:53.679Z","comments":true,"path":"Mysql基础语法/","link":"","permalink":"http://tanchris.cc/Mysql基础语法/","excerpt":"","text":"CREATE1show table; SELECT1SELECT * FROM TABLE_NAME; UPDATE1UPDATE table SET P_INDATE = &apos;2019-05-12&apos; WHERE condition; DELETE12 DROP删除整个表1DROP TABLE table_name ; ALTER TABLEADD新增栏位1ALTER TABLE table_name ADD (COL, TYPE); MODIFY修改已有栏位的data type DROP1ALTER TABLE table_name DROP COLUMN col_name; ADVANCED UPDATE","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[{"name":"Mysql","slug":"Mysql","permalink":"http://tanchris.cc/tags/Mysql/"}]},{"title":"关于Hexo博客文章中图片引用问题","slug":"关于Hexo博客文章中图片引用问题","date":"2019-05-11T12:08:53.000Z","updated":"2019-05-27T07:43:29.587Z","comments":true,"path":"关于Hexo博客文章中图片引用问题/","link":"","permalink":"http://tanchris.cc/关于Hexo博客文章中图片引用问题/","excerpt":"","text":"Hexo 中的博客文章都是用 Markdown 来写的，在 Markdown 中解决上传到码云上的显示不正常的问题，是通过先找到项目的根路径，在逐层寻找图片存放的位置。 而在 Hexo 中 Markdown 的图片使用并不是这样的，Hexo 官网上给出了 资源文件夹 的介绍，正确的引用图片方式是使用下列的标签插件。 在使用标签插件时，需要在 Hexo 的 _config.yml 文件中把 post_asset_folder 选项设置为 true，这样在使用 hexo new 博客文章名 命令创建新的博客时，会在 source 目录中的 _post 文件夹下创建该博客文章的Markdown 文件，并且还会创建一个用来存放该篇博客文章相关的静态资源，比如说图片，这样也便于对文章资源的分类。 在博客文章中，我们需要引入图片时，则先把图片放入到该篇文章的资源文件夹，在正文使用图片的标签插件，1&#123;% asset_img picture_name.jpg picture%&#125; asset_img 代表引用图片，picture_name.jpg 是要引用的图片的名称，picture为给图片加的标注信息（鼠标放上去可以显示出来）。 这样该博客文章的图片就显示正常了。","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://tanchris.cc/tags/hexo/"}]},{"title":"I/O输入输出重导","slug":"I-O输入输出重导","date":"2019-05-11T11:39:31.000Z","updated":"2019-05-27T07:43:53.843Z","comments":true,"path":"I-O输入输出重导/","link":"","permalink":"http://tanchris.cc/I-O输入输出重导/","excerpt":"","text":"标准输出1ls &gt; output.text 将ls原本要在屏幕上输出的内容输出到output.txt中。如果文件不存在，则创建一个新的文件；若文件存在，则清空文件中的内容，再将数据写入 如果想以附加的形式将输出重导入文件中，可以使用&lt;&lt;1ls &gt;&gt; output.txt 标准输入默认从键盘输入1cat 从档案中读取信息，使用&lt;将指定文件设定为程序的标准输入 1cat &lt; input.txt 参考连接：Linux I/O 輸入與輸出重新導向，基礎概念教學","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://tanchris.cc/tags/Linux/"}]},{"title":"ssh连接远程服务器的基本操作指令","slug":"ssh远程操作","date":"2019-05-08T16:00:00.000Z","updated":"2019-07-23T01:18:41.935Z","comments":true,"path":"ssh远程操作/","link":"","permalink":"http://tanchris.cc/ssh远程操作/","excerpt":"","text":"远程连接服务器首先需要使用助教所给的ubuntu环境进行作业的提交以及测试，需要通过Mac terminal连接到远程服务器 在终端输入1ssh -p 端口号 服务器用户名@ip // ssh -p 7878 your_account@140.114.88.201 然后输入服务器的账户密码即可连接成功 基本操作 cd cd / : 进入系统根目录 cd.. 或 cd..// ls 显示当前目录下的文件 mkdir folder: 创建目录，若目录存在会报错 rmdir folder: 删除空文件 rm -rf folder: 删除非空文件夹 rm file : 删除非空文件 rm -r floder : 删除非空目录 cat file: 显示file这个文件的内容 ssh连接远程服务器文件上传下载从服务器上下载文件1scp -P 端口号 username@servername:/path/filename /Users/mac/Desktop（本地目录） /path/filename是服务器上文件的地址，/Users/mac/Desktop是本地文件存放地址 这里遇到一个问题，网上的命令大都是1scp username@servername:/path/filename /Users/mac/Desktop（本地目录） 但是我这样用的时候就会出现图中的问题必须加上-P 端口号才能正常连接 上传本地文件到服务器1scp /path/filename -P 端口号 username@servername:/path 文件夹操作文件夹操作与文件类似，只要在命令里加上-r参数即可 从远程服务器下载整个文件夹到本地1scp -r -P 端口号 username@servername:/path/filename /Users/mac/Desktop 从本地上传文件夹到远程服务器1scp -r -P 端口号 /Users/mac/Desktop username@servername:/path/filename Linux解压 zip解压: unzip filename.zip .tar.gz解压: tar -zxvf filename.tar.gz .tar.bz2解压: tar -jxvf filename.tar.bz2 .tar.xz解压: tar -Jxvf filename.tar.xz .tar.Z解压: tar -Zxvf filname.tar.Z 1.15版本开始的 tar就可以自动识别压缩的格式，不需要认为区分压缩格式 tar -xvf filename.tar.gz/bz2/xz/Z 目前只用到了这几条基础的指令，以后用到了再更新^_^~","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://tanchris.cc/tags/Linux/"},{"name":"ssh","slug":"ssh","permalink":"http://tanchris.cc/tags/ssh/"}]},{"title":"转战Hexo","slug":"hello-world","date":"2019-05-07T16:00:00.000Z","updated":"2019-05-27T07:42:06.433Z","comments":true,"path":"hello-world/","link":"","permalink":"http://tanchris.cc/hello-world/","excerpt":"","text":"Welcome to Hexo! This is my first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[]},{"title":"Pyhton 基础语法","slug":"python基础语法的副本","date":"2019-05-05T07:22:57.000Z","updated":"2019-05-27T07:42:59.278Z","comments":true,"path":"python基础语法的副本/","link":"","permalink":"http://tanchris.cc/python基础语法的副本/","excerpt":"","text":"Python 编程基础 Python 程序基本结构 缩进表示代码块同级代码块的缩进量应保持相同 注释单行注释用“#”表示，“#”之后的内容不会被执行。单行注释可以单独占一行，也可以放在语句末尾。多行注释用三个英文的单引号“’’’”或双引号“””””作为注释的开始和结束符号。 语句续航使用续航符号，将一条语句写在多行之中。方法一：使用“\\”符号12345if x&lt;100\\ and x&gt;10: y = x*5 - 1else: y = 0 方法二：使用括号时，括号中的内容可分多行书写，括号中的空白和换行符都会被忽略。 1234if(x&lt;100 #这是多行语句中的注释 and x&gt;10):else: y=0 语句分隔python 使用分号分隔语句，从而使多条语句写在一行。例如：print(100);print(2+3)如果冒号之后只有一条语句，可将语句写在冒号之后。 12if x&lt;100 and x&gt;10: y=x*5-1else: y=0; print('x&gt;=10 或 x&lt;=10') 关键字大小写Python 的关键字和各种自定义标识符在使用时区分大小写（如if,while,for等）。 输入输出 输入：input()input函数将用户输入以字符串返回。用户按【Enter】键完成输入，之前的字符均作为输入内容。如果需要输入整数或小数，用int或float函数进行转换。 输出：print()print函数基本格式：print([obj1,...],[,sep=&#39;&#39;][,end=&#39;\\n&#39;][,file.sys.stdout]) 省略所有参数无参数时，print函数输出一个空行 输出一个或多个对象 1234&gt;&gt;&gt;print(123) #输出一个对象123&gt;&gt;&gt;print(123,'abc',45,'book') #输出多个对象123abc45book 指定输出分隔符默认分隔符为空格，可用sep参数指定分隔符 12&gt;&gt;&gt;print(123,'abc',45,'book',sep='/')123/abc/45/book 指定输出结尾符号默认以回车换行符号作为输出结尾符号。可用end参数输出结尾符号。 123456789101112131415&gt;&gt;&gt;print('price');print(100)price100&gt;&gt;&gt;print('price',end='=');print(100)price=100``` - **输出到文件** 默认输出到标准输出流（即sys.stdout）。可用file参数输出到特定文件。例如：```python&gt;&gt;&gt;file1=open('data.txt','w') #打开文件&gt;&gt;&gt;print(123,'abc',45,'book',file=file1) #用file参数指定输出文件&gt;&gt;&gt;file1.close() #关闭文件&gt;&gt;&gt;print(open('data.txt'.read())) #输出从文件中读出的内容123 abc 45 book 数据类型 int 整数 double 浮点数 str 字符串 list 数组 dict 字典 tuple 元组 集合 程序流程控制 if 语句1234if(...): ...else: ... 12345678if(...): ...elif(...): .....else: ... for 循环 while 循环 函数与模块 函数 变量作用域 模块 random模块12345random() 用于生成一个0到1的随机浮点数：0&lt;=n&lt;1.0uniform(a,b) 用于生成一个指定范围内的随机浮点数：a&lt;n&lt;brandint(a,b) 用于生成啊a到b之间的一个随机整数（a&lt;=b）randrange([start], stop[,step]) 用于生成一个指定基数递增的集合中随机取一个整数choice(sequence) 从序列中随机取一个元素，其中，sequence表示一个有序类型，例如：list,string,tuple 模块包","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[]},{"title":"Computer Networks : A System Approach","slug":"Computer Networks","date":"2019-05-04T16:00:00.000Z","updated":"2019-05-27T07:41:58.634Z","comments":true,"path":"Computer Networks/","link":"","permalink":"http://tanchris.cc/Computer Networks/","excerpt":"","text":"FundationSwitched network Packet Switched Network (分组交换) Circuit Switched Network (电路交换) internetwork(internet) Router/gateway: 连接两个或多个网络的节点，将消息从一个网络转发到另一个网络 Address: 给每个节点指定一个地址 Routing(路由): 如果发送和接受节点不是直接相连的，那么网络的交换机和路由器将使用这个地址来确定如何将消息转发到目标节点的过程。 Resource Sharing Multiplexing STDM(同步时分多路复用)：将时间划分为等长的时间片，以轮转的方式使每个数据流都有机会将数据发送到物理链路上 FDM(频分多路复用)：将每个流以不同的频率发向物理链路 局限性：如果有一个流它没有数据要发送，它占用的物理链路就会空闲；STDM和FDM所容纳的数据流的最大数目是事先固定和已知的。 Statistical Multiplexing(统计多路复用) 按照时间来共享物理链路 每个流的数据是根据需要传输的，而不是在一个预先规定的时间片进行传输 定义每个流在给定时间内允许传输的 数据块 大小的上界 这个数据块通常称为 packet 确定共享链路上发送哪一个分组 FIFO Round-Robin Common Service A network provides a variety of different types of channels Each application selecting the type that best meets its needs Network Architecturesize LANs,MANs,SANs,PANs,WANs OSI Architecture 每一层的作用 Internet Architecture 也叫做 TCP/IP Architecture Performance Bandwidth (also called throughput) : 在一段特定时间内网络所能传输的比特量 Latency (also called delay) : 将一条消息从网络的一段传到另一端所花费的时间 Round-trip time (RTT) : 网络的往返时间 Getting ConnectedADSL &amp; VDSLEcoding (physical layer) NRZ, NRZI, Manchester encoding, 4B/5B NRZ的两个问题：Baseline wander and Clock recovery Framing (Data link layer)determine where the frame begins and ends Byte-Oriented Protocols Sentinel-based approach: BISYNC (Binary Synchronous Communication) PPP (Point-to-Point Protocol) Byte-counting approach: DDCMP (Digital Data Communication Message Protocol) Bit-Oriented Protocols HDLC (High-level Data Link Control Protocol)Clock-Based Framing Protocols SONET (Synchronous Optical Network) Error Detection Two-Dimensional Parity(二维奇偶校验) Checksum(校验和)：将传输的所有字相加，one’s complement CRC Reliable Transmission ARQ: stop-and-wait Sliding Window SeqNum Sender: SWS, LAR, LFS Receiver: RWS, LAF, LFR MaxSeqNum &gt;= SWS+RWS Random Access Protocols: slotted ALOHA, ALOHA, CSMA, CSMA/CD, CSMA/CA Ethernet(802.3) 以太网 unique Ethernet address：belong to the adapter MAC address (Ethernet address) vs. IP address unicast, broadcast, multicast Transmission Algorithm : 1-persistent, p-persistent “taking Turns” MAC protocols Token Rings(802.5,FDDI) Wireless Wi-Fi/WLAN(802.11) Collosion Avoidance Mobile Ad Hoc Network(MANET) AP distribution system Packet Switching Circuit switching vs. Packet switching 交换机如何决定把每个分组放到哪一条输出链路上的三种方法 Datagram forwarding/routing table Virtual Circuit Approach: 在发送数据之前首先在原主机和目的主机之间建立一条虚连接 两个阶段：建立连接、传输数据 VC表 PVC SVC: 动态地建立和删除虚电路 Source Routing 原主机提供通过网络交换分组时所需的全部网络拓扑结构信息 Bridge and LAN Switches Learning Bridges spanning Tree Algorithm InternetworkingSimple Internetworking (IP) 4 single-technology networks: Ethernet, FDDI, point-to-point Internet Protocol Service Model 想要提供的主机到主机的服务：编址方案、数据报模型best-effect: 不保证一定到达 Datagram Delivery Packet Format Fragmentation and Reassembly(分片与重组) Global Address IP address(32-bits): network address + host address Class A,B,C Datagram forwarding Subnetting reduce the total number of networks that are assigned subnet mask, subnet number All hosts on the same physical network will have the same subnet number Address Translation Address Resolution Protocol (ARP) : 使网络上的每台主机都建立一张IP地址和链路层地址间的映射表 Host Configuration DHCP Virtual Networks and Tunnels: VPN Routing forwadring table: lowest-cost path Routing protocols Distance vector : Each node only knows its routing table(RIP) Link state : all the nodes get a copy of the link-state information from all the other nodes Link Metrics ARPANET Advanced networkingscalability of routing in the Internet Routing areas Interdomin Routing EGP BGP IPv6 deals with scaling problems caused by the Internet’s massive growth 126-bits IPv6 address X:X:X:X:X:X Header Length, Type of Service, Identification, Flags, Fragment Offset, Header Checksum. three major simplifications Assign a fixed format to all headers (40 bytes) Remove the header checksum Remove the hop-by-hop segmentation procedure Extension headers Plug-n-play Auto-Configuration Real-time Support and Flows Routing for Mobile Hosts home agent, home network, home address, foreign agent, mobile host care-of-address: the IP address of the foreign agent Proxy ARP tunneling technique: An IP tunnel is established between the home agent and the foreign agent End-to-End Protocol Transport Level Protocols Simple Demultiplexer(UDP) User Datagram Protocol (UDP) best-effort 标识目标进程的地址形式: port DNS: port 53 ; The mail server: Port 25; The Unix talk program: port 517 Reliable Byte Stream (TCP) Transmission Control Protocol(TCP) reliable, in-order delivery Segment Format SrcPort, DstPort Acknowledgment, SequenceNum(序号), and AdvertisedWindow: TCP’s 滑动窗口算法 6-bit Flags Field Connection Establishment and Termination(连接建立与终止) 三次握手(three-way handshake) Sliding Window Algorithm Flow Control LastByteRcvd – LastByteRead ≤ MaxRcvBuffer AdvertiseWindow = MaxRcvBuffer – ((NextByteExpected – 1) – LastByteRead) LastByteSent–LastByteAcked ≤ AdvertiseWindow EffectiveWindow = AdvertiseWindow – (LastByteSent – LastByteAcked) 如何知道通知窗口不再是0 当对方的通知窗口变为0时，发送方仍坚持不停地发送一个只有一字节的报文段。最终某个0字节的探测报文段会触发一个非0通知窗口的响应 防止回绕、保持管道满载 Triggering Transmission (触发传输) 三种机制触发一个报文段的传输 Silly window syndrome A self-clocking solution: Nagle’s algorithm（决定何时传输数据） Adaptive Retransmission EstimatedRTT = 𝜶 × EstimatedRTT + (1–𝜶) × SampleRTT Karn/Partridge algorithm : 每当TCP重传一个报文段时，停止计算RTT的样本值，并且设置下次的超时值为上次的两倍 Jacobson/Karels algorithm Transport for Real-Time Application Real-time Transport Protocol (RTP): run over UDP Coding schemes agreemen,Timing,同步,分组丢失指示,拥塞避免,帧边界指示,识别发送方,有效利用贷款 Real-time Transport Control Protocol (RTCP) Control Stream 关于应用与网络性能的反馈 来自同一发送方的不同媒体流的关联与同步方法 传输发送方身份以便显示在用户界面上的方法 Congestion Control and Resource Allocation bandwidth of the links and buffers on the routers or switches are sharedCongested: queue overflows and packet have to be dropped frequently Issues in Resource Allocation Flow control Congestion control keeping a fast sender from overrunning a slow receiver keep a set of senders from sending too much data into the network Network Model packet-switched network Connectionless Flows soft state and hard state Router-Centric(在网络内部) Versus Host-Centric(在网络边缘) Reservation-Based : end host asks for a certain amount of capacity at the time a flow is established。 router-centric Feedback-Based : 端主机在未预定任何容量的情况下开始发送数据，然后根据收到的反馈信息调整发送速率，可以是显式的(router)/隐式的 Window-Based Versus Rate-Based Evaluation Criteria (Effectiveness) Power = Throughput / Delay Queuing Disciplines FIFO (First-In-First-Out) Tail drop priority queuing(carried in the IP Type of Service (TOS) field) FQ (Fair Queuing) round-robin manner 下一个被传送的分组总是时间戳值最小的那个分组，一个分组可以插在正在等待的分组之前但是不能抢先到正在传送的分组之前 TCP Congestion Control AIMD：Additive Increase/Multiplicative Decrease(加性增/乘性减) CongestionWindow: TCP源根据它所获得的网络中存在的拥塞级别来设定 Slow Start 刚开始连接时或连接停止而等待超时发生时 lose Data Fast Retransmit and Recovery Congestion Avoidance DECbit(router-centric): congestion bit Random Early Detection (RED router-centric) Notification is implicit drop each arriving packet with some drop probability whenever the queue length exceeds some drop level TCP Vegas Quality of Service(QoS) Application Requirements(Real-Time) RSVP (Resource Reservation Protocol) Service classes: Guaranteed service, Controlled load service Flowspec: Rspec and TSpec Admission control Resource reservation: PATH and RESV Packet scheduling: Classifying packets and Packet scheduling Scalability Issues Differentiated Services Differentiated services model (DiffServ) premium and old best-effort “per-hop behaviors” (PHBs) “expedited forwarding” (EF):give EF packets strict priority or weighted fair queuing “assured forwarding” (AF) weighted fair queuing (WFQ):best-effort queue and premium queue","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"http://tanchris.cc/tags/计算机网络/"}]},{"title":"二叉树遍历的非递归实现","slug":"二叉树遍历的非递归实现","date":"2018-12-16T16:00:00.000Z","updated":"2019-05-27T07:43:21.162Z","comments":true,"path":"二叉树遍历的非递归实现/","link":"","permalink":"http://tanchris.cc/二叉树遍历的非递归实现/","excerpt":"","text":"二叉树中序遍历非递归实现 思路 对于任意节点P 1. 若其左孩子不为空，则将P入栈，并将P的左孩子置为当前的P，再对P进行相同处理。 2. 若其左孩子为空，取出栈顶元素并出栈，访问该栈顶节点，并将当前的P置为栈顶节点的右孩子。 3. 知道P为空且栈为空则遍历结束。 123456789101112131415161718192021222324252627/** * Definition for a binary tree node. * struct TreeNode &#123; * int val; * TreeNode *left; * TreeNode *right; * TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125; * &#125;; *///中序遍历非递归实现void InorderTraversal( TreeNode* root )&#123; stack&lt;TreeNode*&gt; tmp; while( root!=NULL || !tmp.empty() )&#123; while( root != NULL)&#123; tmp.push(root); root = root-&gt;left; &#125; if( !tmp.empty() )&#123; TreeNode* p = tmp.top(); printf(\"%d\",p-&gt;val); tmp.pop(); root = root-&gt;right; &#125; &#125;&#125; 同样的，下面是二叉树的前序遍历的非递归实现12345678910111213141516//前序遍历非递归实现void PreorderTraversal(TreeNode* root) &#123; stack&lt;TreeNode*&gt; S; while(root!=NULL || !S.empty())&#123; if(root!=NULL)&#123; printf(\"%d\",root-&gt;val); S.push(root); root = root-&gt;left; &#125; else if(!S.empty())&#123; root = S.top()-&gt;right; S.pop(); &#125; &#125;&#125; 本以为后序遍历和其他两种差不多…结果是最难的一个😬关键点: 需要判断上一个访问的节点为左节点还是右节点。若为左节点，则要继续访问右节点；若为右节点，则访问当前节点。 123456789101112131415161718192021222324252627282930void postorderTraversal(TreeNode* root) &#123; stack&lt;TreeNode*&gt; S; TreeNode* pLastVisit = NULL; //上次访问节点 while( root!= NULL)&#123; S.push(root); root = root-&gt;left; &#125; while (!S.empty())&#123; root = S.top(); S.pop(); //右节点为空或已访问过则访问当前节点，并更新上次访问节点为当前节点 if(root-&gt;right == NULL || pLastVisit == root-&gt;right)&#123; printf(\"%d\",root-&gt;val); pLastVisit = root; &#125; //右节点没有被访问过，则当前节点重新入栈并访问右节点 else&#123; S.push(root); root = root-&gt;right; while(root)&#123; S.push(root); root = root-&gt;left; &#125; &#125; &#125; &#125;","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[{"name":"数据结构","slug":"数据结构","permalink":"http://tanchris.cc/tags/数据结构/"}]},{"title":"Web前端学习 —— CSS","slug":"Web前端学习之CSS","date":"2018-12-07T16:00:00.000Z","updated":"2019-05-27T07:43:10.645Z","comments":true,"path":"Web前端学习之CSS/","link":"","permalink":"http://tanchris.cc/Web前端学习之CSS/","excerpt":"","text":"CSS Cascading Style Sheets 层叠式样式表 CSS 语法1234567p&#123; /*&lt;‑‑‑‑­­‑‑‑‑ 选择器*/ font-size:12px; /*字号*/ color:blue; /*文字颜色*/ font-weight:bold; /*加粗*/ ... /*属性名：属性值*/&#125; CSS 添加方法 行内样式 &lt;p style&gt; 行内有效 内嵌样式 用&lt;style&gt;标签添加在&lt;head&gt;标签中,这个html文件中有效 单独文件 外部式样式表文件 style.css 在网页文件中添加样式的方法 ==&gt; 在head标签中添加 link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot; 在sublime中可用link:css来进行扩展 优先级 多重样式可以层叠，可以覆盖 样式优先级按照 就近原则 :行内样式&gt;内嵌样式&gt;链接样式&gt; 浏览器默认样式 CSS选择器 标签选择器 选择器名字为标签名字 类别选择器 选择器名为“.”开头，引用是用class指定类别 12345&lt;style type=\"text/css\"p &#123;font-size: 12px;&#125;.one &#123;font-size: 18px;&#125;.two &#123;font-size: 24px&#125;&lt;/style&gt; 1234&lt;body&gt;&lt;p class=\"one\"&gt;类别1&lt;/p&gt; &lt;p class=\"two\"&gt;类别2&lt;/p&gt; &lt;/body&gt; ID 选择器选择器名为 “# “ 号开头,使用时用id属性引用 1234&lt;style type=\"text/css\"#one &#123;font-size: 18px;&#125;#two &#123;font-size: 24px&#125;&lt;/style&gt; 1234&lt;body&gt;&lt;p id=\"one\"&gt;类别1&lt;/p&gt; &lt;p id=\"two\"&gt;类别2&lt;/p&gt; &lt;/body&gt; class选择器与id选择器的区别：ID选择器要在当前html文件中唯一的使用一次而class选择器定义的样式可以多次被引用,作用于多个网页元素上面 嵌套声明 p span 集体声明 h1,p 全局声明 * CSS样式1. 文本与文字样式 单位 px : 像素 em : 1em — 一个字符 自动适应用户所使用的字体 % : 百分比 颜色 文本样式 文本垂直居中: 设置 height = line-height 文本水平居中: 设置 text-align: center; 去掉超链接下划线: 使用 text-decoration: none; 2. 背景与超链接 background: background-color background-image background-repeat 链接的四种状态 a:link 普通的、未被访问的链接 a:visited 被访问过的链接 a:hover 鼠标指针位于链接上方悬停 a:active 链接被点击到的时刻 鼠标悬停放大字体 a:hover{font-size:120%;} 3. 列表和表格 列表 有序列表ol和无序列表ul公用样式 list-style 所有用于列表的属性设置于一个声明中 list-style-image 为列表项标志设置图像 (url”…”) list-style-position 标志的位置 inside/outside list-style-type 标志的类型 表格 border 边框 width 宽 height 高 border-collapse 把表格显示为单线条边框 奇偶选择器可用来设置奇偶行颜色 :nth-child(odd/even)","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[{"name":"Web","slug":"Web","permalink":"http://tanchris.cc/tags/Web/"},{"name":"CSS","slug":"CSS","permalink":"http://tanchris.cc/tags/CSS/"}]},{"title":"Web前端学习 —— HTML","slug":"Web前端学习之HTML","date":"2018-12-02T16:00:00.000Z","updated":"2019-05-27T07:43:15.696Z","comments":true,"path":"Web前端学习之HTML/","link":"","permalink":"http://tanchris.cc/Web前端学习之HTML/","excerpt":"","text":"前端构成 结构：HTML➡️ 描述页面结构 样式：CSS ➡️ 美化页面 行为：JavaScript➡️ 用户交互，提升用户体验 HTML 超文本标记语言 标签、元素、属性 由尖括号包围 &amp; 通常成对出现/单独出现 例如： &lt;title&gt;...&lt;/title&gt; &lt;img.../&gt; 缩进 父元素、子元素 、同级的兄弟元素 HTML DOM树 （DOM：Document Object Model） 一个标签可能有多个属性,属性先后顺序无关,例如： &lt;img src=&quot;logo.jpg&quot; alt=&quot;站标&quot; /&gt; HTML文件结构 文件结构 .htm 或.html文件12345678&lt;html&gt; &lt;head&gt; &lt;title&gt; &lt;/title&gt; &lt;/head&gt; &lt;body&gt; ... &lt;/body&gt;&lt;html&gt; HTML标签 标题标签 &lt;h1&gt; 一级标题&lt;/h1&gt; 段落p &lt;p&gt;每个段落自动换行&lt;/p&gt; 段落内部文字忽略连续空格，也不会显示空行，且不会换行 段内换行 &lt;br /&gt; 空格字符 &amp;nbsp; 预留格式 &lt;pre&gt;&lt;/pre&gt; 行内组合 &lt;span&gt;&lt;/span&gt; 水平线 &nbsp;&nbsp;&lt;hr /&gt; 注释标签 &lt;!--注释内容 --&gt; 超链接标签a&lt; a href = &quot;网址&quot;&gt; 文字或图片 &lt;/a&gt; 链接到本站其他网页 &lt;a href= &quot;news.html&quot; &gt;新闻 &lt;/a&gt; 链接到其他网站 &lt;a href= &quot;http://www.baidu.com&quot;&gt; 百度&lt;/a&gt; 虚拟超链接 &lt;a href= &quot;#&quot;&gt; 板块二&lt;/a&gt; 图像标签img 图像格式：JPG：有损压缩，色彩丰富GIF：简单动画，背景透明PNG：无损压缩 插入图像&lt;img src=&quot;w3school.gif&quot; alt=&quot;w3c&quot; /&gt;src属性：路径+文件名(绝对路径/相对路径)alt:图片打开失败时的替换文字或图片 区域标签div 确定一个单独的区域，结合CSS样式，对每个区域进行排版布局id属性【唯一】align属性sub 上角标 列表 无序列表 &lt;ul&gt;&lt;/ul&gt; 列表项 &lt;li&gt;&lt;/li&gt; 有序列表 &lt;ol&gt;&lt;/ol&gt; 列表项 &nbsp;&lt;li&gt;&lt;/li&gt; 表格 table tr td 1234567891011&lt;div align=\"center\"&gt; &lt;!-- table&gt;tr*2&gt;td拓展之后变为 --&gt; &lt;table border=\"1\"&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;table&gt;&lt;/div&gt; 表头单元格 &lt;th&gt;&lt;/th&gt; 表单与表单元素 表单： 是一个区域，采集用户信息 123&lt;form action=\"数据处理网页\"&gt; &lt;!-- action表示提交的URL地址 --&gt; 表单元素&lt;/form&gt; 表单元素： 文本框、按钮、单选、复选、下拉列表、文本框 文本框、密码框input &lt;input type=&quot;text|password&quot; name=&quot;表单元素名&quot; /&gt; 按钮：提交按钮、重置按钮 123456&lt;form&gt; 姓名： &lt;input type=\"text\" value=\"\" name=\"myName\" /&gt; &lt;input type=\"submit\" value=\"提交\" name=\"submit\" /&gt; &lt;!-- 提交按钮 --&gt; &lt;input type=\"reset\" value=\"重置\" /&gt; &lt;!-- 重置按钮 --&gt;&lt;/form&gt; 单选框、复选框 1234567&lt;form&gt; &lt;input type=\"radio|checkbox\" name=\"名称\" value=\"值\" checked=\"checked\"/&gt; &lt;!-- radio为单选框，checkbox为复选框 --&gt; &lt;!-- value属性表示要提交到后端的数据 --&gt; &lt;!-- name属性表示当前这一项它的名字 --&gt; &lt;!-- checked属性表示当前这一项是否被默认选中 --&gt;&lt;/form&gt; 下拉列表框select option 1234&lt;select&gt; &lt;option&gt;选项1&lt;/option&gt; &lt;option selected=\"selected\"&gt;选项2&lt;/option&gt;&lt;/select&gt; 文本域Testarea 123&lt;textarea name=\"name\" rows=\"8\" cols=\"80\"&gt;文本&lt;/textarea&gt;&lt;!-- rows规定行数，cols规定每行字数 --&gt;&lt;!-- 在textarea区域内写下的文字会默认出现在编辑区域内 --&gt; 补充 &lt;meta&gt;标签 &lt;meta&gt;元素可提供有关页面的元信息（meta-information），比如针对搜索引擎和更新频度的描述和关键词。 &lt;meta&gt; 标签位于文档的头部，不包含任何内容。&lt;meta&gt;标签的属性定义了与文档相关联的名称/值对。 详细用法","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[{"name":"Web","slug":"Web","permalink":"http://tanchris.cc/tags/Web/"},{"name":"HTML","slug":"HTML","permalink":"http://tanchris.cc/tags/HTML/"}]},{"title":"人不彪悍枉少年","slug":"《人不彪悍枉少年》","date":"2018-12-01T16:00:00.000Z","updated":"2019-05-27T07:41:34.969Z","comments":true,"path":"《人不彪悍枉少年》/","link":"","permalink":"http://tanchris.cc/《人不彪悍枉少年》/","excerpt":"","text":"《人不彪悍枉少年》郎骑竹马来，绕床弄青梅。同居长干里，两小无嫌猜。相依相伴十八年从未料到某一刻起我们的故事有了休止符 误解让人羞愧的从来都不是误解本身而是被误解的那个人饱含的全部善意 你的青春有没有过什么东西曾经是你全部的骄傲最后却悄无声息地放进了口袋 所谓天生一对就是紫霞仙子下凡你就要是至尊宝山口智子敲门你就要是木村拓哉 大人们说我们这个年级听见花开的声音都会笑看见落叶的风景都会哭每时每刻躁动难耐无休无止的敏感多情不分昼夜迸发着过剩的荷尔蒙我们的十八岁是他们暮然回首却再也无法抓住的缤纷花季 是不是每一个我想要紧紧握在掌心的人总会在某一个悄然离去那一晚欢声笑语的背后我的心里正在下着一场大雨 因为太过珍惜所以不敢有贪念因为不想失去所以不愿改变我在努力用自己的方式维护一段弥足珍贵的情感却未曾料到将她越推越远 我们为喜欢一个人可以不计得失去努力做那些荒唐的事情却因为他的一席话被瞬间击垮 我们想尽一切办法悄悄跨过某条安全的界限努力分担着生活的重担然而现实总能轻松打破你以为的万事大吉 为了靠近一个人说了一堆真心实意的假话十八岁的我们不是英雄却要逞英雄 有时候心中的盖世英雄就像天降神兵他会身披金甲圣衣脚踏七彩祥云而来在你最无助的时刻赶走你所有的恐惧和黑暗 每个男人的青春岁月是不是都先有一个暴扣篮筐和天地然后站在她左右遮风挡雨的英雄梦 某年某月的某一天我才发现那些我自诩倍加珍惜的人要远远超出万倍的更加珍惜着我 某一天，我们看着自己长高，看着奶奶老去 某一天，我们发现，自己刻骨铭心地想念一个人，又同样被更多人珍惜着 某一天，我们做了一件勇敢的事，并把它载入史册 某一天，我们看着那些根本不相信的事，发生在眼前 1996年，我们把那些平淡无奇的某一天，渲染的惊心动魄，是害怕时间会带着我们慢慢淡忘，曾经，曾经那么热爱生活的每一天 当我们还年少时大张旗鼓地表露真心是一件羞愧的事情正经话都要悄悄讲把它们藏在聊天室中藏在电话线和围巾里藏在一百单八将周通和那块小石头上藏在背后和心底的最深处它们像小溪一样潺潺流动像星星一样忽明忽暗那时青春的絮语低低的轻轻的融化真心破冰而出 未完待续…","categories":[{"name":"emotion","slug":"emotion","permalink":"http://tanchris.cc/categories/emotion/"}],"tags":[{"name":"杂啊","slug":"杂啊","permalink":"http://tanchris.cc/tags/杂啊/"}]},{"title":"浅学android studio","slug":"浅学android studio","date":"2018-11-19T14:00:00.000Z","updated":"2019-05-27T07:43:34.260Z","comments":true,"path":"浅学android studio/","link":"","permalink":"http://tanchris.cc/浅学android studio/","excerpt":"","text":"app目录 build:构建目录 src: androidTest : 安卓单元测试的目录 main Java:写Java文件的地方，将activity创立在此文件夹下 layout:布局资源 menu:菜单资源 value: dinmens:css配置文件 string:字符串资源 style:style资源 AndroidMainifest.xml:配置文件（声明应用程序中所用的组件） android:icon 指出位于res/mipmap-hdpi下应用程序图标，这个应用使用该图标 android:name 指定一个Activity类子类的全名 android:label 指定用于活动名称的字符串 android.intent.action.MAIN 意图过滤器的action，表明这个活动被用作应用程序的入口 android.intent.category.LAUNCHER 意图过滤器的category,表明应用程序可以通过设备启动器的图标来启动 @string 指的是strings.xml build.grade:Gradle构建脚本 Strings文件：包含应用程序使用到的所有文本 R文件：自动生成 Layout文件 activity_main.xml是一个在res/layout目录下的layout文件 TextView: Android的控件用于构建用户图形界面 android: layout_width android: layout_height …… 未完待续。。","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://tanchris.cc/tags/Android/"}]},{"title":"浮点数的比较","slug":"符点数的比较","date":"2018-10-20T16:00:00.000Z","updated":"2019-05-27T07:43:43.649Z","comments":true,"path":"符点数的比较/","link":"","permalink":"http://tanchris.cc/符点数的比较/","excerpt":"","text":"浮点数的比较 由于计算机中采用有限位的二进制编码，因此浮点数在计算机中的存储并不总是精确的.所以进行比较时需要 引入一个极小数eps来对误差进行修正 等于运算符（==)如果一个数落在了[b-eps,b+eps]的区间内，判定 a==b 成立。一般eps取 10^-8 。因此可以将eps定义为常量1e-8: 1const double eps = 1e-8; 为了使比较更加方便，把比较操作写成宏定义的形式： 1#define Equ(a,b)((fabs((a)-(b)))&lt;(eps)) 将a和b相减，如果差的绝对值小于极小量，就返回true 1234567891011121314#include &lt;stdio&gt;#include &lt;math.h&gt;const double eps = 1e-8;#define Equ(a,b)((fabs((a)-(b)))&lt;(eps))int main&#123; double db = 1.23; if(Eue(db, 1.23)&#123; printf(&quot;true&quot;); &#125; else&#123; printf(&quot;false&quot;); &#125; return 0;&#125; 大于运算符（&gt;）一个数a要大于b，那么就必须使a-b大于eps 1#define Equ(a,b)((fabs((a)-(b)))&gt;(eps)) 小于运算符（&lt;）一个数a要小于b，那么就必须使a-b小于-eps 1#define Equ(a,b)((fabs((a)-(b)))&lt;(-eps)) 大于等于运算符（&gt;=）大于b-eps的数都应认为是大于等于b的 1#define Equ(a,b)((fabs((a)-(b)))&gt;(-eps)) 小于等于运算符（&lt;=）小于b+eps的数都应认为是小于于等于b的 1#define Equ(a,b)((fabs((a)-(b)))&lt;(eps)) 圆周率π由cos(π) = -1 可得 π = arccos(-1) 1const double Pi = acos(-1.0)","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[{"name":"算法笔记","slug":"算法笔记","permalink":"http://tanchris.cc/tags/算法笔记/"},{"name":"C/C++","slug":"C-C","permalink":"http://tanchris.cc/tags/C-C/"}]},{"title":"Markdown基本语法","slug":"markdown基本使用","date":"2018-06-30T16:00:00.000Z","updated":"2019-05-27T07:42:47.698Z","comments":true,"path":"markdown基本使用/","link":"","permalink":"http://tanchris.cc/markdown基本使用/","excerpt":"","text":"Markdown 是一种非常简单的排版语法，几分钟就能够基本掌握。使用 Markdown 语法来编写博客将是一件非常惬意的事，你从此不需要为了各种各样的排版效果而浪费精力，而是将注意力集中在编写内容本身。 基本 Markdown 语法 各种语言的代码渲染 LaTeX 数学公式渲染 基本 Markdown 语法 Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。 —— 维基百科 详细语法请参考《Markdown 语法说明》。 表格 项目 价格 数量 Computer 1600 元 5 Phone 12 元 12 Pipe 1 元 234 列表无序列表 汽车 飞机 火车 有序列表 汽车 飞机 火车 嵌套列表 交通工具 汽车 轿车 客车 飞机 火车 可选线路 线路1 线路2 各种语言的代码渲染本博客使用 highlight.js 对代码进行进行渲染，选用的主题为 Google code 主题，下面为展示效果： C 123456#include &lt;stdio.h&gt;int main()&#123; printf(\"Hello World!/n\"); return 0;&#125; Java 1234567class Hello&#123; public static void main(String ars[]) &#123; System.out.print(\"Hello World!/n\"); &#125;&#125; LaTeX 数学公式渲染本博客使用 MathJax 对 LaTex 格式的数学公式进行渲染，下面为展示效果： 同时支持行内公式 $\\sqrt{a+b}$ 和行间公式 x=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}","categories":[{"name":"technology","slug":"technology","permalink":"http://tanchris.cc/categories/technology/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://tanchris.cc/tags/markdown/"}]}]}