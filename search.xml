<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MacOS install apache+Mysql+php+phpMyadmin</title>
      <link href="/apache-Mysql-php-phpMyadmin/"/>
      <url>/apache-Mysql-php-phpMyadmin/</url>
      
        <content type="html"><![CDATA[<p>由于数据库的课必须要使用到 <code>mysql</code> 和 <code>php</code> ，所以不得不自己配置环境，过程可谓是百般波折，最终通过 <code>Youtube</code> 成功配置。</p><h1 id="启用-apache"><a href="#启用-apache" class="headerlink" title="启用 apache"></a>启用 apache</h1><p>在MacOS中，<code>apache</code>已经被预先安装好了，所以我们只需要启动它就好了。</p><p>在终端中，使用 <code>sudo apachectl start</code> 命令打开apache服务<br><img src="/apache-Mysql-php-phpMyadmin/01.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apachectl start     <span class="comment"># 启动apache</span></span><br><span class="line">sudo apachectl restart   <span class="comment"># 重新启动</span></span><br><span class="line">sudo apachectl stop      <span class="comment"># 关闭apache</span></span><br></pre></td></tr></table></figure><p>启动后，打开浏览器输入<code>localhost</code>,界面显示 <strong>It Works!</strong> 表示apache启用成功。</p><h1 id="配置php"><a href="#配置php" class="headerlink" title="配置php"></a>配置php</h1><h2 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h2><p>打开 <strong>Finder ➔ 前往 ➔ 前往文件夹</strong>，输入<code>/Library/WebServer/Documents</code><br><img src="/apache-Mysql-php-phpMyadmin/02.png"><br>如果是初次配置应该会看到该文件夹里有三个文件，<code>index.html.en</code>和两张图片</p><p>现在在终端中输入下面命令并输入密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/apache2/httpd.conf</span><br></pre></td></tr></table></figure></p><p>进入配置文件<img src="/apache-Mysql-php-phpMyadmin/03.png"></p><p>找到 <code>#LoadModule php7_module libexec/apache2/libphp7.so</code> 这一行，删除最前面的<code>#</code><br><img src="/apache-Mysql-php-phpMyadmin/04.png"></p><p>接着，找到图中的三行<br><img src="/apache-Mysql-php-phpMyadmin/05.png"></p><p>改为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule dir_module&gt;</span><br><span class="line">    DirectoryIndex index.php index.html</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure></p><p>使用 <strong>control+O</strong> 保存, <strong>enter</strong> 回车，<strong>control+X</strong> 退出</p><p>到这一步，我们已经完成了 apache+PHP 的基本配置</p><p>终端输入<code>sudo apachectl restart</code>重新启用apache</p><h2 id="开启访问权限"><a href="#开启访问权限" class="headerlink" title="开启访问权限"></a>开启访问权限</h2><p>更改Documents文件夹的访问权限</p><p><strong>Finder ➔ 前往 ➔ 前往文件夹</strong><br><img src="/apache-Mysql-php-phpMyadmin/06.png"><br>输入<code>/Library/WebServer</code>,前往，右击<code>Documents</code>选择 <strong>显示简介</strong>，点击右下角的🔒并输入密码，将wheel和everyone的权限都改为读和写</p><img src="/apache-Mysql-php-phpMyadmin/07.png"><p>现在你可以删除 <strong>Documents</strong> 文件夹下的两张图片，它们不会再被使用到。</p><h2 id="新建index-php"><a href="#新建index-php" class="headerlink" title="新建index.php"></a>新建index.php</h2><p>现在再终端中输入下面命令并回车</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /Library/Webserver/Documents/index.php</span><br></pre></td></tr></table></figure><p>这条命令表示在Documents目录下新建了一个php文档，进入界面应该是空白的，输入下面代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><img src="/apache-Mysql-php-phpMyadmin/08.png"><p>然后使用 <strong>control+O</strong> 保存, <strong>enter</strong> 回车，<strong>control+X</strong> 退出</p><p>现在你可以删除Documents目录下除了index.php外的所有文件了</p><p>在浏览器中刷新localhost界面，显示如图所示<br><img src="/apache-Mysql-php-phpMyadmin/09.png"></p><p>如果页面没有刷新，可以尝试重新启动apache服务或等待一会应该就好了</p><h1 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>进入<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">Mysql下载页面</a><br><img src="/apache-Mysql-php-phpMyadmin/mysql1.png"><br>选择DMG下载安装<br><strong>在安装的最后一步一定不要关闭页面！！！</strong><br><strong>安装完成之后会弹出一个对话框，告诉我们生成了一个root账户的临时密码。请注意保存，否则重设密码会比较麻烦。</strong><br><img src="/apache-Mysql-php-phpMyadmin/mysql.png"> 复制圈中的密码到记事本后面会用到</p><p>终端执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /var/mysql</span><br><span class="line">sudo ln -s /tmp/mysql.sock /var/mysql/mysql.sock  <span class="comment">#creat a short link for Mysql which is needed for phpMyadmin</span></span><br></pre></td></tr></table></figure></p><p>打开系统偏好设置，在底部可以看到新的mysql图标，点击图标，开启mysql<br><img src="/apache-Mysql-php-phpMyadmin/12.png"><br><img src="/apache-Mysql-php-phpMyadmin/11.png"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>回到终端，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mysql/bin</span><br><span class="line">sudo ./mysql -u root -p</span><br></pre></td></tr></table></figure><p>然后先输入电脑密码，接着再根据提示输入刚刚安装mysql结束时复制的临时mysql密码，就可以进入mysql了。<br><img src="/apache-Mysql-php-phpMyadmin/13.png"></p><p>然后我们需要更改密码，继续输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; Alter user <span class="string">'root'</span>@<span class="string">'localhost'</span> identified by <span class="string">'password'</span>;</span><br><span class="line">mysql&gt; <span class="built_in">exit</span>   <span class="comment">#退出</span></span><br></pre></td></tr></table></figure><p><code>password</code>换成自己想设定的密码就可以</p><h1 id="下载phpMyadmin"><a href="#下载phpMyadmin" class="headerlink" title="下载phpMyadmin"></a>下载phpMyadmin</h1><p>首先进入<a href="https://www.phpmyadmin.net/" target="_blank" rel="noopener">官网</a>下载<br><img src="/apache-Mysql-php-phpMyadmin/14.png"></p><p>解压之后将文件夹放到前面讲到的<code>Documents</code>文件夹下，并重新命名为<code>phpmyadmin</code></p><p>在终端输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /Library/WebServer/Documents/</span><br><span class="line">Documents chris$ <span class="built_in">cd</span> phpMyAdmin/</span><br><span class="line">phpMyAdmin chris$ sudo mkdir config</span><br><span class="line">phpMyAdmin chris$ sudo chmod o+x config</span><br></pre></td></tr></table></figure></p><p>现在打开浏览器输入 <code>localhost/phpmyadmin/setup</code><br>新增server<br><img src="/apache-Mysql-php-phpMyadmin/15.png"><br><img src="/apache-Mysql-php-phpMyadmin/16.png"></p><p>下载配置文件<br><img src="/apache-Mysql-php-phpMyadmin/17.png"><br>将配置文件 <code>config.inc.php</code> 放入 <em>phpmyadmin</em> 文件夹里</p><p>现在我们就可以在浏览器中输入 <strong>localhost/phpmyadmin</strong> 通过使用者账号和密码登入了。<br><em>默认账户名称为root，也可以自己新增账户</em></p><p>到此我们的配置工作就全部完成了✅<br>最后附上原视频的链接，可以翻墙的小伙伴可以看视频配置。<br><a href="https://www.youtube.com/watch?v=vHYh-m4iXw4&amp;t=73s" target="_blank" rel="noopener">Install Full Webserver (Apache, PHP, MySQL, phpMyAdmin) | macOS</a></p><p>新增账户以及其他本地连接下次再写～</p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
            <tag> php </tag>
            
            <tag> apache </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo g 报错</title>
      <link href="/hexo%20g%E6%8A%A5%E9%94%99/"/>
      <url>/hexo%20g%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<p>使用<code>hexo g</code>报错<br><a id="more"></a></p><p>错误提示：<br><img src="/hexo%20g报错/error.png" title="picture"></p><p>解决办法：   </p><p>  将<strong>hexo根目录</strong>下<code>_config.yml</code>配置文件中<br>  <code>highlight</code>选项的<code>auto_detect</code>设为<code>false</code></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br></pre></td></tr></table></figure><p><a href="https://github.com/hexojs/hexo/issues/1627" target="_blank" rel="noopener">参考链接</a>：<a href="https://github.com/hexojs/hexo/issues/1627" target="_blank" rel="noopener">https://github.com/hexojs/hexo/issues/1627</a></p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加Disqus评论失败解决办法</title>
      <link href="/%E6%B7%BB%E5%8A%A0Disqus%E8%AF%84%E8%AE%BA%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/%E6%B7%BB%E5%8A%A0Disqus%E8%AF%84%E8%AE%BA%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>错误提示：<br><img src="/添加Disqus评论失败解决办法/error.png" title="picture"></p><p>解决办法：<br>在 hexo 根目录下的<code>_config.yml</code>配置文件中，这段代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: http://tanchris.cc</span><br><span class="line">root: /</span><br><span class="line">permalink: :title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><p>把url填成自己的网站地址，一定加上<code>http://</code>不然就会报错。</p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql基础语法</title>
      <link href="/Mysql%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/Mysql%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="CREATE"><a href="#CREATE" class="headerlink" title="CREATE"></a>CREATE</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show table;</span><br></pre></td></tr></table></figure><h1 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM TABLE_NAME;</span><br></pre></td></tr></table></figure><h1 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE"></a>UPDATE</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE table SET P_INDATE = &apos;2019-05-12&apos; WHERE condition;</span><br></pre></td></tr></table></figure><h1 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="DROP"><a href="#DROP" class="headerlink" title="DROP"></a>DROP</h1><p>删除整个表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE table_name ;</span><br></pre></td></tr></table></figure></p><h1 id="ALTER-TABLE"><a href="#ALTER-TABLE" class="headerlink" title="ALTER TABLE"></a>ALTER TABLE</h1><h2 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h2><p>新增栏位<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name ADD (COL, TYPE);</span><br></pre></td></tr></table></figure></p><h2 id="MODIFY"><a href="#MODIFY" class="headerlink" title="MODIFY"></a>MODIFY</h2><p>修改已有栏位的<code>data type</code></p><h2 id="DROP-1"><a href="#DROP-1" class="headerlink" title="DROP"></a>DROP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name DROP COLUMN col_name;</span><br></pre></td></tr></table></figure><h1 id="ADVANCED-UPDATE"><a href="#ADVANCED-UPDATE" class="headerlink" title="ADVANCED UPDATE"></a>ADVANCED UPDATE</h1>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Hexo博客文章中图片引用问题</title>
      <link href="/%E5%85%B3%E4%BA%8EHexo%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E4%B8%AD%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8%E9%97%AE%E9%A2%98/"/>
      <url>/%E5%85%B3%E4%BA%8EHexo%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E4%B8%AD%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>Hexo 中的博客文章都是用 <code>Markdown</code> 来写的，在 <code>Markdown</code> 中解决上传到码云上的显示不正常的问题，是通过先找到项目的根路径，在逐层寻找图片存放的位置。    </p><p>而在 Hexo 中 <code>Markdown</code> 的图片使用并不是这样的，Hexo 官网上给出了 <a href="https://hexo.io/zh-cn/docs/asset-folders.html#%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%BC%95%E7%94%A8%E7%9A%84%E6%A0%87%E7%AD%BE%E6%8F%92%E4%BB%B6" target="_blank" rel="noopener">资源文件夹</a> 的介绍，正确的引用图片方式是使用下列的标签插件。    </p><p>在使用标签插件时，需要在 Hexo 的 <code>_config.yml</code> 文件中把 <code>post_asset_folder</code> 选项设置为 <code>true</code>，这样在使用 <code>hexo new 博客文章名</code> 命令创建新的博客时，会在 <code>source</code> 目录中的 <code>_post</code> 文件夹下创建该博客文章的<code>Markdown</code> 文件，并且还会创建一个用来存放该篇博客文章相关的静态资源，比如说图片，这样也便于对文章资源的分类。      </p><p>在博客文章中，我们需要引入图片时，则先把图片放入到该篇文章的资源文件夹，在正文使用图片的标签插件，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img picture_name.jpg picture%&#125;</span><br></pre></td></tr></table></figure></p><p>asset_img 代表引用图片，<code>picture_name.jpg</code> 是要引用的图片的名称，picture为给图片加的标注信息（鼠标放上去可以显示出来）。</p><p>这样该博客文章的图片就显示正常了。</p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>I/O输入输出重导</title>
      <link href="/I-O%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AF%BC/"/>
      <url>/I-O%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AF%BC/</url>
      
        <content type="html"><![CDATA[<h1 id="标准输出"><a href="#标准输出" class="headerlink" title="标准输出"></a>标准输出</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls &gt; output.text</span><br></pre></td></tr></table></figure><p>将<code>ls</code>原本要在屏幕上输出的内容输出到<code>output.txt</code>中。<br>如果文件不存在，则创建一个新的文件；若文件存在，则清空文件中的内容，再将数据写入</p><p>如果想以附加的形式将输出重导入文件中，可以使用<code>&lt;&lt;</code><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls &gt;&gt; output.txt</span><br></pre></td></tr></table></figure></p><h1 id="标准输入"><a href="#标准输入" class="headerlink" title="标准输入"></a>标准输入</h1><p>默认从键盘输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat</span><br></pre></td></tr></table></figure></p><p>从档案中读取信息，使用<code>&lt;</code>将指定文件设定为程序的标准输入</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &lt; input.txt</span><br></pre></td></tr></table></figure><p><a href="https://blog.gtwang.org/linux/linux-io-input-output-redirection-operators/?fbclid=IwAR1PyRwf9ym_r17xjrIltyG6g-cBmSOJT6yvsMZKhwABuHy490jRwzUIwBY" target="_blank" rel="noopener">参考连接：Linux I/O 輸入與輸出重新導向，基礎概念教學</a></p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh连接远程服务器的基本操作指令</title>
      <link href="/ssh%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C/"/>
      <url>/ssh%E8%BF%9C%E7%A8%8B%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="远程连接服务器"><a href="#远程连接服务器" class="headerlink" title="远程连接服务器"></a>远程连接服务器</h2><p>首先需要使用助教所给的<code>ubuntu</code>环境进行作业的提交以及测试，需要通过<code>Mac terminal</code>连接到远程服务器</p><p>在终端输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 端口号 服务器用户名@ip    // ssh -p 7878 your_account@140.114.88.201</span><br></pre></td></tr></table></figure></p><p>然后输入服务器的账户密码即可连接成功</p><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><ol><li><p><code>cd</code></p><ul><li><p><code>cd /</code> : 进入系统根目录</p></li><li><p><code>cd..</code> 或 <code>cd..//</code></p></li></ul></li><li><p><code>ls</code> 显示当前目录下的文件</p></li><li><p><code>mkdir folder</code>:  创建目录，若目录存在会报错  </p><p><code>rmdir folder</code>:  删除空文件</p><p><code>rm -rf folder</code>: 删除非空文件夹</p></li><li><p><code>rm file</code> : 删除非空文件</p><p><code>rm -r floder</code> : 删除非空目录</p></li><li><p><code>cat file</code>: 显示file这个文件的内容</p></li></ol><h2 id="ssh连接远程服务器文件上传下载"><a href="#ssh连接远程服务器文件上传下载" class="headerlink" title="ssh连接远程服务器文件上传下载"></a>ssh连接远程服务器文件上传下载</h2><h4 id="从服务器上下载文件"><a href="#从服务器上下载文件" class="headerlink" title="从服务器上下载文件"></a>从服务器上下载文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -P 端口号 username@servername:/path/filename /Users/mac/Desktop（本地目录）</span><br></pre></td></tr></table></figure><p>  <code>/path/filename</code>是服务器上文件的地址，<code>/Users/mac/Desktop</code>是本地文件存放地址        </p><p>  这里遇到一个问题，网上的命令大都是<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp username@servername:/path/filename /Users/mac/Desktop（本地目录）</span><br></pre></td></tr></table></figure></p><p>  但是我这样用的时候就会出现图中的问题必须加上<code>-P 端口号</code>才能正常连接</p><h4 id="上传本地文件到服务器"><a href="#上传本地文件到服务器" class="headerlink" title="上传本地文件到服务器"></a>上传本地文件到服务器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp /path/filename -P 端口号 username@servername:/path</span><br></pre></td></tr></table></figure><h4 id="文件夹操作"><a href="#文件夹操作" class="headerlink" title="文件夹操作"></a>文件夹操作</h4><p>文件夹操作与文件类似，只要在命令里加上<code>-r</code>参数即可</p><p>从远程服务器下载整个文件夹到本地<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r -P 端口号 username@servername:/path/filename /Users/mac/Desktop</span><br></pre></td></tr></table></figure></p><p>从本地上传文件夹到远程服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r -P 端口号 /Users/mac/Desktop username@servername:/path/filename</span><br></pre></td></tr></table></figure></p><h2 id="Linux解压"><a href="#Linux解压" class="headerlink" title="Linux解压"></a>Linux解压</h2><ul><li><p>zip解压: <code>unzip filename.zip</code></p></li><li><p>.tar.gz解压: <code>tar -zxvf filename.tar.gz</code></p></li><li><p>.tar.bz2解压: <code>tar -jxvf filename.tar.bz2</code></p></li><li><p>.tar.xz解压: <code>tar -Jxvf filename.tar.xz</code></p></li><li><p>.tar.Z解压: <code>tar -Zxvf filname.tar.Z</code></p></li></ul><p><strong>1.15版本开始的 tar就可以自动识别压缩的格式，不需要认为区分压缩格式</strong></p><p><code>tar -xvf filename.tar.gz/bz2/xz/Z</code></p><hr><p><em>目前只用到了这几条基础的指令，以后用到了再更新^_^~</em></p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>转战Hexo</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is my first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Pyhton 基础语法</title>
      <link href="/python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E7%9A%84%E5%89%AF%E6%9C%AC/"/>
      <url>/python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E7%9A%84%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="Python-编程基础"><a href="#Python-编程基础" class="headerlink" title="Python 编程基础"></a>Python 编程基础</h2><ul><li><h4 id="Python-程序基本结构"><a href="#Python-程序基本结构" class="headerlink" title="Python 程序基本结构"></a>Python 程序基本结构</h4><ul><li><h5 id="缩进表示代码块"><a href="#缩进表示代码块" class="headerlink" title="缩进表示代码块"></a>缩进表示代码块</h5>同级代码块的缩进量应保持相同</li><li><h5 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h5>单行注释用“#”表示，“#”之后的内容不会被执行。单行注释可以单独占一行，也可以放在语句末尾。<br>多行注释用三个英文的单引号“’’’”或双引号“””””作为注释的开始和结束符号。   </li><li><h5 id="语句续航"><a href="#语句续航" class="headerlink" title="语句续航"></a>语句续航</h5><em>使用续航符号，将一条语句写在多行之中。</em><br>方法一：使用“\”符号<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> x&lt;<span class="number">100</span>\</span><br><span class="line">      <span class="keyword">and</span> x&gt;<span class="number">10</span>:</span><br><span class="line">      y = x*<span class="number">5</span> - <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">      y = <span class="number">0</span></span><br></pre></td></tr></table></figure></li></ul><p>方法二：使用括号时，括号中的内容可分多行书写，括号中的空白和换行符都会被忽略。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">100</span>    <span class="comment">#这是多行语句中的注释</span></span><br><span class="line">      <span class="keyword">and</span> x&gt;<span class="number">10</span>):</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">      y=<span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li><h5 id="语句分隔"><a href="#语句分隔" class="headerlink" title="语句分隔"></a>语句分隔</h5><p>python 使用分号分隔语句，从而使多条语句写在一行。例如：<br><code>print(100);print(2+3)</code><br>如果冒号之后只有一条语句，可将语句写在冒号之后。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> x&lt;<span class="number">100</span> <span class="keyword">and</span> x&gt;<span class="number">10</span>: y=x*<span class="number">5</span><span class="number">-1</span></span><br><span class="line"><span class="keyword">else</span>: y=<span class="number">0</span>; print(<span class="string">'x&gt;=10 或 x&lt;=10'</span>)</span><br></pre></td></tr></table></figure></li><li><h5 id="关键字大小写"><a href="#关键字大小写" class="headerlink" title="关键字大小写"></a>关键字大小写</h5><p>Python 的关键字和各种自定义标识符在使用时区分大小写（如if,while,for等）。</p></li></ul></li></ul><ul><li><h4 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h4><ul><li><h5 id="输入：input"><a href="#输入：input" class="headerlink" title="输入：input()"></a>输入：input()</h5>input函数将用户输入以字符串返回。用户按【Enter】键完成输入，之前的字符均作为输入内容。<br>如果需要输入整数或小数，用int或float函数进行转换。</li><li><h5 id="输出：print"><a href="#输出：print" class="headerlink" title="输出：print()"></a>输出：print()</h5><p>print函数基本格式：<br><code>print([obj1,...],[,sep=&#39;&#39;][,end=&#39;\n&#39;][,file.sys.stdout])</code>    </p><ul><li><p><strong>省略所有参数</strong><br>无参数时，print函数输出一个空行</p></li><li><p><strong>输出一个或多个对象</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;print(<span class="number">123</span>)                    <span class="comment">#输出一个对象</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line">&gt;&gt;&gt;print(<span class="number">123</span>,<span class="string">'abc'</span>,<span class="number">45</span>,<span class="string">'book'</span>)    <span class="comment">#输出多个对象</span></span><br><span class="line"><span class="number">123</span>abc45book</span><br></pre></td></tr></table></figure></li><li><p><strong>指定输出分隔符</strong><br>默认分隔符为空格，可用sep参数指定分隔符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;print(<span class="number">123</span>,<span class="string">'abc'</span>,<span class="number">45</span>,<span class="string">'book'</span>,sep=<span class="string">'/'</span>)</span><br><span class="line"><span class="number">123</span>/abc/<span class="number">45</span>/book</span><br></pre></td></tr></table></figure></li><li><p><strong>指定输出结尾符号</strong><br>默认以回车换行符号作为输出结尾符号。可用end参数输出结尾符号。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;print(<span class="string">'price'</span>);print(<span class="number">100</span>)</span><br><span class="line">price</span><br><span class="line"><span class="number">100</span></span><br><span class="line">&gt;&gt;&gt;print(<span class="string">'price'</span>,end=<span class="string">'='</span>);print(<span class="number">100</span>)</span><br><span class="line">price=<span class="number">100</span></span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">- **输出到文件**    </span><br><span class="line">默认输出到标准输出流（即sys.stdout）。可用file参数输出到特定文件。例如：</span><br><span class="line">```python</span><br><span class="line">&gt;&gt;&gt;file1=open(<span class="string">'data.txt'</span>,<span class="string">'w'</span>)              <span class="comment">#打开文件</span></span><br><span class="line">&gt;&gt;&gt;print(<span class="number">123</span>,<span class="string">'abc'</span>,<span class="number">45</span>,<span class="string">'book'</span>,file=file1)   <span class="comment">#用file参数指定输出文件</span></span><br><span class="line">&gt;&gt;&gt;file1.close()                           <span class="comment">#关闭文件</span></span><br><span class="line">&gt;&gt;&gt;print(open(<span class="string">'data.txt'</span>.read()))          <span class="comment">#输出从文件中读出的内容</span></span><br><span class="line"><span class="number">123</span> abc <span class="number">45</span> book</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><ul><li>int 整数</li><li>double 浮点数</li><li>str 字符串</li><li>list 数组</li><li>dict 字典</li><li>tuple 元组</li><li>集合</li></ul></li></ul><hr><h2 id="程序流程控制"><a href="#程序流程控制" class="headerlink" title="程序流程控制"></a>程序流程控制</h2><ul><li><h4 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(...):</span><br><span class="line">      ...</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">      ...</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(...):</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">elif</span>(...):</span><br><span class="line">    ...</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><ul><li><h4 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h4></li><li><h4 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h4></li></ul><hr><h2 id="函数与模块"><a href="#函数与模块" class="headerlink" title="函数与模块"></a>函数与模块</h2><ul><li><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4></li><li><h4 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h4></li><li><h4 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h4><ul><li><h5 id="random模块"><a href="#random模块" class="headerlink" title="random模块"></a>random模块</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">random()                用于生成一个<span class="number">0</span>到<span class="number">1</span>的随机浮点数：<span class="number">0</span>&lt;=n&lt;<span class="number">1.0</span></span><br><span class="line">uniform(a,b)            用于生成一个指定范围内的随机浮点数：a&lt;n&lt;b</span><br><span class="line">randint(a,b)            用于生成啊a到b之间的一个随机整数（a&lt;=b）</span><br><span class="line">randrange([start], stop[,step])    用于生成一个指定基数递增的集合中随机取一个整数</span><br><span class="line">choice(sequence)        从序列中随机取一个元素，其中，sequence表示一个有序类型，例如：list,string,tuple</span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="模块包"><a href="#模块包" class="headerlink" title="模块包"></a>模块包</h4></li></ul>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Computer Networks : A System Approach</title>
      <link href="/Computer%20Networks/"/>
      <url>/Computer%20Networks/</url>
      
        <content type="html"><![CDATA[<h1 id="Fundation"><a href="#Fundation" class="headerlink" title="Fundation"></a>Fundation</h1><h2 id="Switched-network"><a href="#Switched-network" class="headerlink" title="Switched network"></a>Switched network</h2><ul><li><p><a href="/Computer Networks/packet-switch.png">Packet Switched Network (分组交换)</a></p></li><li><p><a href="/Computer Networks/circuit-switch.png">Circuit Switched Network (电路交换)</a></p></li></ul><h2 id="internetwork-internet"><a href="#internetwork-internet" class="headerlink" title="internetwork(internet)"></a>internetwork(internet)</h2><ul><li>Router/gateway: 连接两个或多个网络的节点，将消息从一个网络转发到另一个网络</li><li>Address: 给每个节点指定一个地址</li><li>Routing(路由): 如果发送和接受节点不是直接相连的，那么网络的交换机和路由器将使用这个地址来确定如何将消息转发到目标节点的过程。</li></ul><h2 id="Resource-Sharing"><a href="#Resource-Sharing" class="headerlink" title="Resource Sharing"></a>Resource Sharing</h2><ul><li><p>Multiplexing</p><ul><li><p>STDM(同步时分多路复用)：将时间划分为等长的时间片，以轮转的方式使每个数据流都有机会将数据发送到物理链路上</p></li><li><p>FDM(频分多路复用)：将每个流以不同的频率发向物理链路</p></li><li><p>局限性：如果有一个流它没有数据要发送，它占用的物理链路就会空闲；STDM和FDM所容纳的数据流的最大数目是事先固定和已知的。</p></li></ul></li><li><p>Statistical Multiplexing(统计多路复用)</p><ul><li><p>按照时间来共享物理链路</p></li><li><p>每个流的数据是根据需要传输的，而不是在一个预先规定的时间片进行传输</p></li><li><p>定义每个流在给定时间内允许传输的 <em>数据块</em> 大小的上界</p><ul><li>这个数据块通常称为 <em>packet</em></li></ul></li><li><p>确定共享链路上发送哪一个分组</p><ul><li>FIFO</li><li>Round-Robin</li></ul></li></ul></li></ul><h2 id="Common-Service"><a href="#Common-Service" class="headerlink" title="Common Service"></a>Common Service</h2><ul><li>A network provides a variety of different types of channels</li><li>Each application selecting the type that best meets its needs</li></ul><h2 id="Network-Architecture"><a href="#Network-Architecture" class="headerlink" title="Network Architecture"></a>Network Architecture</h2><h3 id="size"><a href="#size" class="headerlink" title="size"></a>size</h3><ul><li>LANs,MANs,SANs,PANs,WANs</li></ul><h3 id="OSI-Architecture"><a href="#OSI-Architecture" class="headerlink" title="OSI Architecture"></a>OSI Architecture</h3><img src="/Computer%20Networks/OSI.png"><blockquote><p>每一层的作用</p></blockquote><h3 id="Internet-Architecture"><a href="#Internet-Architecture" class="headerlink" title="Internet Architecture"></a>Internet Architecture</h3><ul><li>也叫做 <a href="Internet-archi.png"><em>TCP/IP Architecture</em></a></li></ul><h3 id="Performance"><a href="#Performance" class="headerlink" title="Performance"></a>Performance</h3><ul><li>Bandwidth (also called throughput) : 在一段特定时间内网络所能传输的比特量</li><li>Latency (also called delay) : 将一条消息从网络的一段传到另一端所花费的时间</li><li>Round-trip time (RTT) : 网络的往返时间</li></ul><hr><h1 id="Getting-Connected"><a href="#Getting-Connected" class="headerlink" title="Getting Connected"></a>Getting Connected</h1><h2 id="ADSL-amp-VDSL"><a href="#ADSL-amp-VDSL" class="headerlink" title="ADSL &amp; VDSL"></a>ADSL &amp; VDSL</h2><h2 id="Ecoding-physical-layer"><a href="#Ecoding-physical-layer" class="headerlink" title="Ecoding (physical layer)"></a>Ecoding (<em>physical layer</em>)</h2><ul><li>NRZ, NRZI, Manchester encoding, 4B/5B</li><li>NRZ的两个问题：Baseline wander and Clock recovery</li></ul><h2 id="Framing-Data-link-layer"><a href="#Framing-Data-link-layer" class="headerlink" title="Framing (Data link layer)"></a>Framing (<em>Data link layer</em>)</h2><h3 id="determine-where-the-frame-begins-and-ends"><a href="#determine-where-the-frame-begins-and-ends" class="headerlink" title="determine where the frame begins and ends"></a>determine where the frame begins and ends</h3><ul><li>Byte-Oriented Protocols<ul><li>Sentinel-based approach:<ul><li>BISYNC (Binary Synchronous Communication)</li><li>PPP (Point-to-Point Protocol)</li></ul></li><li>Byte-counting approach:<ul><li>DDCMP (Digital Data Communication Message Protocol)</li></ul></li></ul></li><li>Bit-Oriented Protocols<ul><li>HDLC (High-level Data Link Control Protocol)<br>Clock-Based Framing Protocols</li><li>SONET (Synchronous Optical Network)</li></ul></li></ul><h3 id="Error-Detection"><a href="#Error-Detection" class="headerlink" title="Error Detection"></a>Error Detection</h3><ul><li>Two-Dimensional Parity(二维奇偶校验)</li><li>Checksum(校验和)：将传输的所有字相加，one’s complement</li><li>CRC</li></ul><h2 id="Reliable-Transmission"><a href="#Reliable-Transmission" class="headerlink" title="Reliable Transmission"></a>Reliable Transmission</h2><ul><li>ARQ: stop-and-wait</li><li>Sliding Window<ul><li>SeqNum</li><li>Sender: SWS, LAR, LFS</li><li>Receiver: RWS, LAF, LFR</li><li>MaxSeqNum &gt;= SWS+RWS    </li></ul></li><li>Random Access Protocols: slotted ALOHA, ALOHA, CSMA, CSMA/CD, CSMA/CA</li></ul><h2 id="Ethernet-802-3-以太网"><a href="#Ethernet-802-3-以太网" class="headerlink" title="Ethernet(802.3) 以太网"></a>Ethernet(802.3) 以太网</h2><ul><li>unique Ethernet address：belong to the adapter</li><li>MAC address (Ethernet address) vs. IP address</li><li>unicast, broadcast, multicast</li><li>Transmission Algorithm : <em>1-persistent, p-persistent</em></li><li>“taking Turns” MAC protocols</li><li>Token Rings(802.5,FDDI)</li></ul><h2 id="Wireless"><a href="#Wireless" class="headerlink" title="Wireless"></a>Wireless</h2><ul><li>Wi-Fi/WLAN(802.11)</li><li>Collosion Avoidance</li><li>Mobile Ad Hoc Network(MANET)<ul><li>AP</li><li>distribution system</li></ul></li></ul><hr><h1 id="Packet-Switching"><a href="#Packet-Switching" class="headerlink" title="Packet Switching"></a>Packet Switching</h1><blockquote><p>Circuit switching vs. Packet switching</p></blockquote><h2 id="交换机如何决定把每个分组放到哪一条输出链路上的三种方法"><a href="#交换机如何决定把每个分组放到哪一条输出链路上的三种方法" class="headerlink" title="交换机如何决定把每个分组放到哪一条输出链路上的三种方法"></a>交换机如何决定把每个分组放到哪一条输出链路上的三种方法</h2><ul><li>Datagram<ul><li>forwarding/routing table</li></ul></li><li>Virtual Circuit Approach: 在发送数据之前首先在原主机和目的主机之间建立一条虚连接<ul><li>两个阶段：建立连接、传输数据</li><li>VC表</li><li>PVC</li><li>SVC: 动态地建立和删除虚电路</li></ul></li><li>Source Routing<ul><li>原主机提供通过网络交换分组时所需的全部网络拓扑结构信息</li></ul></li><li>Bridge and LAN Switches<ul><li>Learning Bridges</li><li>spanning Tree Algorithm</li></ul></li></ul><hr><h1 id="Internetworking"><a href="#Internetworking" class="headerlink" title="Internetworking"></a>Internetworking</h1><h2 id="Simple-Internetworking-IP"><a href="#Simple-Internetworking-IP" class="headerlink" title="Simple Internetworking (IP)"></a>Simple Internetworking (IP)</h2><ul><li>4 single-technology networks: Ethernet, FDDI, point-to-point</li><li>Internet Protocol</li></ul><h2 id="Service-Model"><a href="#Service-Model" class="headerlink" title="Service Model"></a>Service Model</h2><blockquote><p>想要提供的主机到主机的服务：编址方案、数据报模型<br>best-effect: 不保证一定到达</p></blockquote><ul><li>Datagram Delivery</li><li><a href="packet-format.png">Packet Format</a></li><li>Fragmentation and Reassembly(分片与重组)</li><li>Global Address<ul><li>IP address(32-bits): network address + host address</li><li>Class A,B,C</li><li>Datagram forwarding</li></ul></li><li><p>Subnetting</p><blockquote><p>reduce the total number of networks that are assigned</p></blockquote><ul><li>subnet mask, subnet number</li><li>All hosts on the same physical network will have the same subnet number</li></ul></li><li>Address Translation<ul><li>Address Resolution Protocol (ARP) : 使网络上的每台主机都建立一张IP地址和链路层地址间的映射表</li></ul></li><li>Host Configuration<ul><li>DHCP</li></ul></li><li>Virtual Networks and Tunnels: VPN</li></ul><h2 id="Routing"><a href="#Routing" class="headerlink" title="Routing"></a>Routing</h2><ul><li>forwadring table: lowest-cost path</li><li>Routing protocols<ul><li>Distance vector : Each node only knows its routing table(RIP)</li><li>Link state : all the nodes get a copy of the link-state information from all the other nodes</li></ul></li><li>Link Metrics<ul><li>ARPANET</li></ul></li></ul><hr><h1 id="Advanced-networking"><a href="#Advanced-networking" class="headerlink" title="Advanced networking"></a>Advanced networking</h1><h2 id="scalability-of-routing-in-the-Internet"><a href="#scalability-of-routing-in-the-Internet" class="headerlink" title="scalability of routing in the Internet"></a>scalability of routing in the Internet</h2><ul><li>Routing areas</li><li>Interdomin Routing<ul><li>EGP</li><li>BGP</li></ul></li></ul><h2 id="IPv6"><a href="#IPv6" class="headerlink" title="IPv6"></a>IPv6</h2><ul><li>deals with scaling problems caused by the Internet’s massive growth</li><li>126-bits</li><li>IPv6 address  X:X:X:X:X:X</li><li>Header Length, Type of Service, Identification, Flags, Fragment Offset, Header Checksum.</li><li>three major simplifications<ul><li>Assign a fixed format to all headers (40 bytes)</li><li>Remove the header checksum</li><li>Remove the hop-by-hop segmentation procedure</li></ul></li><li>Extension headers</li><li>Plug-n-play Auto-Configuration</li><li>Real-time Support and Flows</li></ul><h2 id="Routing-for-Mobile-Hosts"><a href="#Routing-for-Mobile-Hosts" class="headerlink" title="Routing for Mobile Hosts"></a>Routing for Mobile Hosts</h2><ul><li>home agent, home network, home address, foreign agent, mobile host</li><li><a href="mobile-host.png">care-of-address</a>: the IP address of the foreign agent</li><li>Proxy ARP</li><li><a href="tunneling.png">tunneling technique</a>: An IP tunnel is established between the home agent and the foreign agent</li></ul><hr><h1 id="End-to-End-Protocol"><a href="#End-to-End-Protocol" class="headerlink" title="End-to-End Protocol"></a>End-to-End Protocol</h1><blockquote><p>Transport Level Protocols</p></blockquote><h2 id="Simple-Demultiplexer-UDP"><a href="#Simple-Demultiplexer-UDP" class="headerlink" title="Simple Demultiplexer(UDP)"></a>Simple Demultiplexer(UDP)</h2><ul><li>User Datagram Protocol (UDP)</li><li>best-effort</li><li>标识目标进程的地址形式: port<ul><li>DNS: port 53  ; The mail server: Port 25; The Unix talk program: port 517</li></ul></li></ul><h2 id="Reliable-Byte-Stream-TCP"><a href="#Reliable-Byte-Stream-TCP" class="headerlink" title="Reliable Byte Stream (TCP)"></a>Reliable Byte Stream (TCP)</h2><ul><li><p>Transmission Control Protocol(TCP)</p></li><li><p>reliable, in-order delivery</p></li><li><p>Segment Format</p><ul><li>SrcPort, DstPort</li><li>Acknowledgment, SequenceNum(序号), and AdvertisedWindow: TCP’s 滑动窗口算法 <img src="/Computer%20Networks/segment-format.png"></li><li>6-bit Flags Field</li></ul></li><li><p>Connection Establishment and Termination(连接建立与终止)</p><ul><li>三次握手(three-way handshake)<img src="/Computer%20Networks/three-handshake.png"></li></ul></li><li><p><strong>Sliding Window Algorithm</strong></p><ul><li><p>Flow Control</p><ul><li>LastByteRcvd – LastByteRead ≤ MaxRcvBuffer</li><li>AdvertiseWindow = MaxRcvBuffer – ((NextByteExpected – 1) – LastByteRead)   </li><li>LastByteSent–LastByteAcked ≤ AdvertiseWindow</li><li>EffectiveWindow = AdvertiseWindow – (LastByteSent – LastByteAcked)  </li></ul></li><li><p>如何知道通知窗口不再是0</p><ul><li>当对方的通知窗口变为0时，发送方仍坚持不停地发送一个只有一字节的报文段。最终某个0字节的探测报文段会触发一个非0通知窗口的响应</li></ul></li><li><p>防止回绕、保持管道满载</p></li></ul></li><li><p><strong>Triggering Transmission</strong> (触发传输)</p><ul><li>三种机制触发一个报文段的传输</li><li>Silly window syndrome</li><li>A self-clocking solution: <em>Nagle’s algorithm</em>（决定何时传输数据）</li></ul></li><li><p><strong>Adaptive Retransmission</strong></p><ul><li>EstimatedRTT = 𝜶 × EstimatedRTT + (1–𝜶) × SampleRTT</li><li>Karn/Partridge algorithm : 每当TCP重传一个报文段时，停止计算RTT的样本值，并且设置下次的超时值为上次的两倍</li><li>Jacobson/Karels algorithm</li></ul></li><li><p><strong>Transport for Real-Time Application</strong></p><ul><li>Real-time Transport Protocol (RTP): run over UDP<ul><li>Coding schemes agreemen,Timing,同步,分组丢失指示,拥塞避免,帧边界指示,识别发送方,有效利用贷款</li></ul></li><li>Real-time Transport Control Protocol (RTCP)<ul><li>Control Stream<ul><li>关于应用与网络性能的反馈</li><li>来自同一发送方的不同媒体流的关联与同步方法</li><li>传输发送方身份以便显示在用户界面上的方法</li></ul></li></ul></li></ul></li></ul><hr><h1 id="Congestion-Control-and-Resource-Allocation"><a href="#Congestion-Control-and-Resource-Allocation" class="headerlink" title="Congestion Control and Resource Allocation"></a>Congestion Control and Resource Allocation</h1><blockquote><p><strong>bandwidth</strong> of the links and <strong>buffers</strong> on the routers or switches are shared<br>Congested: queue overflows and packet have to be dropped frequently</p></blockquote><h2 id="Issues-in-Resource-Allocation"><a href="#Issues-in-Resource-Allocation" class="headerlink" title="Issues in Resource Allocation"></a>Issues in Resource Allocation</h2><div class="table-container"><table><thead><tr><th>Flow control</th><th>Congestion control</th></tr></thead><tbody><tr><td>keeping a fast sender from overrunning a slow receiver</td><td>keep a set of senders from sending too much data into the network</td></tr></tbody></table></div><ul><li><p>Network Model</p><ul><li>packet-switched network</li><li>Connectionless Flows<ul><li>soft state and hard state</li></ul></li><li>Router-Centric(在网络内部) Versus Host-Centric(在网络边缘)</li><li>Reservation-Based : end host asks for a certain amount of capacity at the time a flow is established。 <strong>router-centric</strong></li><li>Feedback-Based : 端主机在未预定任何容量的情况下开始发送数据，然后根据收到的反馈信息调整发送速率，可以是显式的(router)/隐式的</li><li>Window-Based Versus Rate-Based</li></ul></li><li><p>Evaluation Criteria (Effectiveness)</p><ul><li><em>Power = Throughput / Delay</em></li></ul></li></ul><h2 id="Queuing-Disciplines"><a href="#Queuing-Disciplines" class="headerlink" title="Queuing Disciplines"></a>Queuing Disciplines</h2><ul><li><p>FIFO (First-In-First-Out)</p><ul><li>Tail drop</li><li>priority queuing(carried in the IP Type of Service (TOS) field)</li></ul></li><li><p>FQ (Fair Queuing)</p><ul><li>round-robin manner</li><li>下一个被传送的分组总是时间戳值最小的那个分组，一个分组可以插在正在等待的分组之前但是不能抢先到正在传送的分组之前</li></ul></li></ul><h2 id="TCP-Congestion-Control"><a href="#TCP-Congestion-Control" class="headerlink" title="TCP Congestion Control"></a>TCP Congestion Control</h2><ul><li><p>AIMD：Additive Increase/Multiplicative Decrease(加性增/乘性减)</p><ul><li><strong>CongestionWindow</strong>: TCP源根据它所获得的网络中存在的拥塞级别来设定</li></ul></li><li><p>Slow Start</p><ul><li>刚开始连接时或连接停止而等待超时发生时</li><li>lose Data</li></ul></li><li><p>Fast Retransmit and Recovery</p></li></ul><h2 id="Congestion-Avoidance"><a href="#Congestion-Avoidance" class="headerlink" title="Congestion Avoidance"></a>Congestion Avoidance</h2><ul><li>DECbit(<em>router-centric</em>): congestion bit</li><li>Random Early Detection (RED <em>router-centric</em>)<ul><li>Notification is implicit</li><li>drop each arriving packet with some drop probability whenever the queue length exceeds some drop level</li></ul></li><li>TCP Vegas</li></ul><h2 id="Quality-of-Service-QoS"><a href="#Quality-of-Service-QoS" class="headerlink" title="Quality of Service(QoS)"></a>Quality of Service(QoS)</h2><ul><li><p>Application Requirements(Real-Time)</p></li><li><p>RSVP (Resource Reservation Protocol)</p><ul><li>Service classes: Guaranteed service, Controlled load service</li><li>Flowspec: Rspec and TSpec</li><li>Admission control</li><li>Resource reservation: PATH and RESV</li><li>Packet scheduling: Classifying packets and Packet scheduling</li><li>Scalability Issues</li></ul></li><li><p>Differentiated Services</p><ul><li>Differentiated services model (DiffServ)</li><li>premium and old best-effort</li><li>“per-hop behaviors” (PHBs)<ul><li>“expedited forwarding” (EF):give EF packets strict priority or weighted fair queuing</li><li>“assured forwarding” (AF)</li></ul></li><li>weighted fair queuing (WFQ):best-effort queue and premium queue</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二叉树遍历的非递归实现</title>
      <link href="/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86%E7%9A%84%E9%9D%9E%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0/"/>
      <url>/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86%E7%9A%84%E9%9D%9E%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h4 id="二叉树中序遍历非递归实现"><a href="#二叉树中序遍历非递归实现" class="headerlink" title="二叉树中序遍历非递归实现"></a>二叉树中序遍历非递归实现</h4><blockquote><p><strong>思路</strong>  </p></blockquote><pre><code>对于任意节点P1. 若其左孩子不为空，则将P入栈，并将P的左孩子置为当前的P，再对P进行相同处理。2. 若其左孩子为空，取出栈顶元素并出栈，访问该栈顶节点，并将当前的P置为栈顶节点的右孩子。3. 知道P为空且栈为空则遍历结束。</code></pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * struct TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode *left;</span></span><br><span class="line"><span class="comment"> *     TreeNode *right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//中序遍历非递归实现</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InorderTraversal</span><span class="params">( TreeNode* root )</span></span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;TreeNode*&gt; tmp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>( root!=<span class="literal">NULL</span> || !tmp.empty() )&#123;</span><br><span class="line">        <span class="keyword">while</span>( root != <span class="literal">NULL</span>)&#123;</span><br><span class="line">            tmp.push(root);</span><br><span class="line">            root = root-&gt;left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( !tmp.empty() )&#123;</span><br><span class="line">            TreeNode* p = tmp.top();</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,p-&gt;val);</span><br><span class="line">            tmp.pop();</span><br><span class="line">            root = root-&gt;right;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="同样的，下面是二叉树的前序遍历的非递归实现"><a href="#同样的，下面是二叉树的前序遍历的非递归实现" class="headerlink" title="同样的，下面是二叉树的前序遍历的非递归实现"></a>同样的，下面是二叉树的前序遍历的非递归实现</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//前序遍历非递归实现</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreorderTraversal</span><span class="params">(TreeNode* root)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;TreeNode*&gt; S;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(root!=<span class="literal">NULL</span> || !S.empty())&#123;</span><br><span class="line">        <span class="keyword">if</span>(root!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,root-&gt;val);</span><br><span class="line">            S.push(root);</span><br><span class="line">            root = root-&gt;left;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!S.empty())&#123;</span><br><span class="line">            root = S.top()-&gt;right;</span><br><span class="line">            S.pop();</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p>本以为后序遍历和其他两种差不多…结果是最难的一个😬<br>关键点: 需要判断上一个访问的节点为左节点还是右节点。若为左节点，则要继续访问右节点；若为右节点，则访问当前节点。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">postorderTraversal</span><span class="params">(TreeNode* root)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;TreeNode*&gt; S;</span><br><span class="line"></span><br><span class="line">    TreeNode* pLastVisit = <span class="literal">NULL</span>;  <span class="comment">//上次访问节点</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>( root!= <span class="literal">NULL</span>)&#123;</span><br><span class="line">            S.push(root);</span><br><span class="line">            root = root-&gt;left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!S.empty())&#123;</span><br><span class="line">        root = S.top();</span><br><span class="line">        S.pop();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//右节点为空或已访问过则访问当前节点，并更新上次访问节点为当前节点</span></span><br><span class="line">        <span class="keyword">if</span>(root-&gt;right == <span class="literal">NULL</span> || pLastVisit == root-&gt;right)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,root-&gt;val);</span><br><span class="line">            pLastVisit = root;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//右节点没有被访问过，则当前节点重新入栈并访问右节点</span></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            S.push(root);</span><br><span class="line">            root = root-&gt;right;</span><br><span class="line">            <span class="keyword">while</span>(root)&#123;</span><br><span class="line">                S.push(root);</span><br><span class="line">                root = root-&gt;left;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端学习 —— CSS</title>
      <link href="/Web%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%B9%8BCSS/"/>
      <url>/Web%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%B9%8BCSS/</url>
      
        <content type="html"><![CDATA[<h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><blockquote><p>Cascading Style Sheets 层叠式样式表</p></blockquote><ul><li><h4 id="CSS-语法"><a href="#CSS-语法" class="headerlink" title="CSS 语法"></a>CSS 语法</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123; <span class="comment">/*&lt;‑‑‑‑­­‑‑‑‑ 选择器*/</span></span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">12px</span>;   <span class="comment">/*字号*/</span></span><br><span class="line">  <span class="attribute">color</span>:blue;       <span class="comment">/*文字颜色*/</span></span><br><span class="line">  <span class="attribute">font-weight</span>:bold; <span class="comment">/*加粗*/</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="comment">/*属性名：属性值*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><ul><li><h4 id="CSS-添加方法"><a href="#CSS-添加方法" class="headerlink" title="CSS 添加方法"></a>CSS 添加方法</h4><ol><li><strong>行内样式</strong><br> <code>&lt;p style&gt; 行内有效</code></li><li><strong>内嵌样式</strong><br> <code>用&lt;style&gt;标签添加在&lt;head&gt;标签中,这个html文件中有效</code></li><li><p><strong>单独文件</strong><br> 外部式样式表文件 style.css<br> 在网页文件中添加样式的方法 ==&gt; 在head标签中添加 <code>link rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot;</code>   </p><blockquote><p> 在sublime中可用link:css来进行扩展</p></blockquote></li><li><p><strong>优先级</strong></p><ul><li>多重样式可以层叠，可以覆盖</li><li>样式优先级按照 <strong>就近原则</strong> :<br><strong>行内样式&gt;内嵌样式&gt;链接样式&gt;</strong> 浏览器默认样式</li></ul></li></ol></li></ul><hr><ul><li><h4 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h4><ul><li><p><strong>标签选择器</strong><br>  选择器名字为标签名字<br>  <br>  </p></li><li><p><strong>类别选择器</strong><br>  选择器名为“.”开头，引用是用class指定类别</p>  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type="text/css"</span><br><span class="line"><span class="selector-tag">p</span>    &#123;<span class="attribute">font-size</span>: <span class="number">12px</span>;&#125;</span><br><span class="line"><span class="selector-class">.one</span> &#123;<span class="attribute">font-size</span>: <span class="number">18px</span>;&#125;</span><br><span class="line"><span class="selector-class">.two</span> &#123;<span class="attribute">font-size</span>: <span class="number">24px</span>&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"one"</span>&gt;</span>类别1<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"two"</span>&gt;</span>类别2<span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>  <br></p></li><li><p><strong>ID 选择器</strong><br>选择器名为 “# “ 号开头,使用时用id属性引用</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type="text/css"</span><br><span class="line"><span class="selector-id">#one</span> &#123;<span class="attribute">font-size</span>: <span class="number">18px</span>;&#125;</span><br><span class="line"><span class="selector-id">#two</span> &#123;<span class="attribute">font-size</span>: <span class="number">24px</span>&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"one"</span>&gt;</span>类别1<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"two"</span>&gt;</span>类别2<span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><strong>class选择器与id选择器的区别：</strong><br>ID选择器要在当前html文件中唯一的使用一次<br>而class选择器定义的样式可以多次被引用,作用于多个网页元素上面<br><br></p></li><li><p><strong>嵌套声明</strong>  <code>p span</code></p></li><li><strong>集体声明</strong>  <code>h1,p</code></li><li><strong>全局声明</strong>  <code>*</code></li></ul></li></ul><hr><ul><li><h4 id="CSS样式"><a href="#CSS样式" class="headerlink" title="CSS样式"></a>CSS样式</h4><h4 id="1-文本与文字样式"><a href="#1-文本与文字样式" class="headerlink" title="1. 文本与文字样式"></a>1. <strong>文本与文字样式</strong></h4><ul><li><p><strong>单位</strong></p><ul><li>px : 像素</li><li>em : 1em — 一个字符<br>   自动适应用户所使用的字体</li><li>%  : 百分比</li></ul></li><li><p><strong>颜色</strong>         </p></li><li><p><strong>文本样式</strong></p><ul><li>文本垂直居中: 设置  height = line-height     </li><li>文本水平居中: 设置 <code>text-align: center;</code>    </li><li>去掉超链接下划线: 使用 text-decoration: none;</li></ul><p><br></p></li></ul><h4 id="2-背景与超链接"><a href="#2-背景与超链接" class="headerlink" title="2. 背景与超链接"></a>2. <strong>背景与超链接</strong></h4><ul><li><p><strong>background</strong>:   </p><ul><li>background-color</li><li>background-image</li><li>background-repeat</li></ul></li><li><p><strong>链接的四种状态</strong>     </p><ul><li>a:link      普通的、未被访问的链接   </li><li>a:visited   被访问过的链接     </li><li>a:hover     鼠标指针位于链接上方悬停    </li><li>a:active    链接被点击到的时刻   </li></ul><p>鼠标悬停放大字体  a:hover{font-size:120%;}<br> <br></p></li></ul><h4 id="3-列表和表格"><a href="#3-列表和表格" class="headerlink" title="3. 列表和表格"></a>3. <strong>列表和表格</strong></h4><ul><li><p><strong>列表</strong>    </p><blockquote><p>有序列表ol和无序列表ul公用样式   </p></blockquote><ul><li>list-style    所有用于列表的属性设置于一个声明中</li><li>list-style-image    为列表项标志设置图像  (url”…”)</li><li>list-style-position   标志的位置 inside/outside    </li><li>list-style-type     <a href="/img/post_img/list-style-type.png">标志的类型</a></li></ul></li><li><p><strong>表格</strong></p><ul><li>border    边框    </li><li>width     宽   </li><li>height    高     </li><li>border-collapse   把表格显示为单线条边框   </li><li><a href="http://www.w3school.com.cn/cssref/selector_nth-child.asp" target="_blank" rel="noopener">奇偶选择器</a>可用来设置奇偶行颜色     <code>:nth-child(odd/even)</code></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web前端学习 —— HTML</title>
      <link href="/Web%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%B9%8BHTML/"/>
      <url>/Web%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E4%B9%8BHTML/</url>
      
        <content type="html"><![CDATA[<h3 id="前端构成"><a href="#前端构成" class="headerlink" title="前端构成"></a>前端构成</h3><ol><li><h4 id="结构：HTML"><a href="#结构：HTML" class="headerlink" title="结构：HTML"></a><a href="HTML">结构：HTML</a></h4>➡️ <strong>描述页面结构</strong></li><li><h4 id="样式：CSS"><a href="#样式：CSS" class="headerlink" title="样式：CSS "></a><a href="2018-12-05-Web前端学习之CSS.markdown">样式：CSS </a></h4>➡️ <strong>美化页面</strong></li><li><h4 id="行为：JavaScript"><a href="#行为：JavaScript" class="headerlink" title="行为：JavaScript"></a><a href="2018-12-05-Web前端学习之CSS.markdown">行为：JavaScript</a></h4>➡️ <strong>用户交互，提升用户体验</strong></li></ol><hr><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><blockquote><p>超文本标记语言</p></blockquote><ul><li><h4 id="标签、元素、属性"><a href="#标签、元素、属性" class="headerlink" title="标签、元素、属性"></a>标签、元素、属性</h4><p>  由尖括号包围 &amp; 通常成对出现/单独出现<br>  例如：<br>  <code>&lt;title&gt;...&lt;/title&gt;</code><br>  <code>&lt;img.../&gt;</code></p><p>  <strong>缩进</strong><br>  父元素、子元素 、同级的兄弟元素<br>  HTML DOM树 （DOM：Document Object Model）   </p><p>  一个标签可能有多个属性,属性先后顺序无关,例如：<br>  <code>&lt;img src=&quot;logo.jpg&quot; alt=&quot;站标&quot; /&gt;</code>  </p></li></ul><ul><li><h4 id="HTML文件结构"><a href="#HTML文件结构" class="headerlink" title="HTML文件结构"></a>HTML文件结构</h4><ul><li>文件结构<br>  .htm 或.html文件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>   <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><h4 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h4><ul><li><p><strong>标题标签</strong> <code>&lt;h1&gt; 一级标题&lt;/h1&gt;</code></p></li><li><p><strong>段落p</strong><br>  <code>&lt;p&gt;每个段落自动换行&lt;/p&gt;</code><br>  <strong>段落内部文字忽略连续空格，也不会显示空行，且不会换行</strong></p><ul><li>段内换行 <code>&lt;br /&gt;</code></li><li>空格字符 <code>&amp;nbsp;</code></li><li>预留格式 <code>&lt;pre&gt;&lt;/pre&gt;</code></li><li>行内组合 <code>&lt;span&gt;&lt;/span&gt;</code></li><li>水平线 &nbsp;&nbsp;<code>&lt;hr /&gt;</code></li><li>注释标签 <code>&lt;!--注释内容 --&gt;</code></li></ul></li><li><p><strong>超链接标签a</strong><br><code>&lt; a href = &quot;网址&quot;&gt; 文字或图片 &lt;/a&gt;</code></p><ul><li>链接到本站其他网页  <code>&lt;a href= &quot;news.html&quot; &gt;新闻 &lt;/a&gt;</code></li><li>链接到其他网站      <code>&lt;a href= &quot;http://www.baidu.com&quot;&gt; 百度&lt;/a&gt;</code></li><li>虚拟超链接   <code>&lt;a href= &quot;#&quot;&gt; 板块二&lt;/a&gt;</code></li></ul></li><li><p><strong>图像标签img</strong></p><ul><li><p>图像格式：<br>JPG：有损压缩，色彩丰富<br>GIF：简单动画，背景透明<br>PNG：无损压缩</p></li><li><p>插入图像<br><code>&lt;img src=&quot;w3school.gif&quot; alt=&quot;w3c&quot; /&gt;</code><br>src属性：路径+文件名(绝对路径/相对路径)<br>alt:图片打开失败时的替换文字或图片</p></li></ul></li><li><p><strong>区域标签div</strong>   </p><p>确定一个单独的区域，结合CSS样式，对每个区域进行排版布局<br>id属性【唯一】<br>align属性<br>sub  上角标     </p></li><li><p><strong>列表</strong></p><ul><li>无序列表  <code>&lt;ul&gt;&lt;/ul&gt;</code>    列表项 <code>&lt;li&gt;&lt;/li&gt;</code></li><li>有序列表  <code>&lt;ol&gt;&lt;/ol&gt;</code>   列表项 &nbsp;<code>&lt;li&gt;&lt;/li&gt;</code></li></ul></li><li><p><strong>表格 table tr td</strong></p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- table&gt;tr*2&gt;td拓展之后变为 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>表头单元格</strong>  <code>&lt;th&gt;&lt;/th&gt;</code></p></li><li><p><strong>表单与表单元素</strong>   </p><p><strong>表单：</strong> 是一个区域，采集用户信息  </p><pre><code><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"数据处理网页"</span>&gt;</span>  <span class="comment">&lt;!-- action表示提交的URL地址 --&gt;</span></span><br><span class="line">  表单元素</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></code></pre><p><strong>表单元素：</strong> 文本框、按钮、单选、复选、下拉列表、文本框</p><ul><li>文本框、密码框input <code>&lt;input type=&quot;text|password&quot; name=&quot;表单元素名&quot; /&gt;</code></li><li><p>按钮：提交按钮、重置按钮   </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    姓名：</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>  <span class="attr">value</span>=<span class="string">""</span>    <span class="attr">name</span>=<span class="string">"myName"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span> <span class="attr">name</span>=<span class="string">"submit"</span> /&gt;</span> <span class="comment">&lt;!-- 提交按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span>  <span class="attr">value</span>=<span class="string">"重置"</span> /&gt;</span> <span class="comment">&lt;!-- 重置按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>单选框、复选框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio|checkbox"</span> <span class="attr">name</span>=<span class="string">"名称"</span> <span class="attr">value</span>=<span class="string">"值"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- radio为单选框，checkbox为复选框 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- value属性表示要提交到后端的数据 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- name属性表示当前这一项它的名字 --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- checked属性表示当前这一项是否被默认选中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>下拉列表框select option    </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>文本域Testarea    </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">rows</span>=<span class="string">"8"</span> <span class="attr">cols</span>=<span class="string">"80"</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- rows规定行数，cols规定每行字数 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在textarea区域内写下的文字会默认出现在编辑区域内 --&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/img/in-post/html_form.png" alt="表单元素"></p></li></ul></li></ul></li></ul><ul><li><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><ul><li><strong><code>&lt;meta&gt;</code>标签</strong>    </li></ul><p><code>&lt;meta&gt;</code>元素可提供有关页面的元信息（meta-information），比如针对搜索引擎和更新频度的描述和关键词。<br>  <code>&lt;meta&gt;</code> 标签位于文档的头部，不包含任何内容。<code>&lt;meta&gt;</code>标签的属性定义了与文档相关联的名称/值对。    </p><h5 id="详细用法"><a href="#详细用法" class="headerlink" title="详细用法"></a><a href="http://www.w3school.com.cn/tags/tag_meta.asp" target="_blank" rel="noopener">详细用法</a></h5></li></ul>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人不彪悍枉少年</title>
      <link href="/%E3%80%8A%E4%BA%BA%E4%B8%8D%E5%BD%AA%E6%82%8D%E6%9E%89%E5%B0%91%E5%B9%B4%E3%80%8B/"/>
      <url>/%E3%80%8A%E4%BA%BA%E4%B8%8D%E5%BD%AA%E6%82%8D%E6%9E%89%E5%B0%91%E5%B9%B4%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="《人不彪悍枉少年》"><a href="#《人不彪悍枉少年》" class="headerlink" title="《人不彪悍枉少年》"></a>《人不彪悍枉少年》</h2><p>郎骑竹马来，绕床弄青梅。<br>同居长干里，两小无嫌猜。<br>相依相伴十八年<br>从未料到<br>某一刻起<br>我们的故事有了休止符  </p><hr><p>误解<br>让人羞愧的从来都不是误解本身<br>而是被误解的那个人<br>饱含的全部善意</p><hr><p>你的青春<br>有没有过什么东西<br>曾经是你全部的骄傲<br>最后<br>却悄无声息地<br>放进了口袋  </p><hr><p>所谓天生一对<br>就是紫霞仙子下凡<br>你就要是至尊宝<br>山口智子敲门<br>你就要是木村拓哉</p><hr><p>大人们说<br>我们这个年级<br>听见花开的声音都会笑<br>看见落叶的风景都会哭<br>每时每刻躁动难耐<br>无休无止的敏感多情<br>不分昼夜迸发着过剩的荷尔蒙<br>我们的十八岁<br>是他们暮然回首<br>却再也无法抓住的<br>缤纷花季</p><hr><p>是不是每一个<br>我想要紧紧握在掌心的人<br>总会在某一个悄然离去<br>那一晚欢声笑语的背后<br>我的心里正在下着一场大雨</p><hr><p>因为太过珍惜<br>所以不敢有贪念<br>因为不想失去<br>所以不愿改变<br>我在努力用自己的方式<br>维护一段弥足珍贵的情感<br>却未曾料到<br>将她越推越远</p><hr><p>我们为喜欢一个人<br>可以不计得失<br>去努力做那些荒唐的事情<br>却因为他的一席话<br>被瞬间击垮  </p><hr><p>我们想尽一切办法<br>悄悄跨过某条安全的界限<br>努力分担着生活的重担<br>然而现实<br>总能轻松打破<br>你以为的万事大吉</p><hr><p>为了靠近一个人<br>说了一堆真心实意的假话<br>十八岁的我们<br>不是英雄<br>却要逞英雄</p><hr><p>有时候心中的盖世英雄<br>就像天降神兵<br>他会身披金甲圣衣<br>脚踏七彩祥云而来<br>在你最无助的时刻<br>赶走你所有的恐惧和黑暗</p><hr><p>每个男人的青春岁月<br>是不是都先有一个暴扣篮筐和天地<br>然后站在她左右<br>遮风挡雨的英雄梦</p><hr><p>某年某月的某一天<br>我才发现<br>那些我自诩倍加珍惜的人<br>要远远超出万倍的更加珍惜着我</p><hr><p> 某一天，我们看着自己长高，看着奶奶老去<br> 某一天，我们发现，自己刻骨铭心地想念一个人，又同样被更多人珍惜着<br> 某一天，我们做了一件勇敢的事，并把它载入史册<br> 某一天，我们看着那些根本不相信的事，发生在眼前<br> 1996年，我们把那些平淡无奇的某一天，渲染的惊心动魄，是害怕时间会带着我们慢慢淡忘，曾经，曾经那么热爱生活的每一天</p><hr><p>当我们还年少时<br>大张旗鼓地表露真心<br>是一件羞愧的事情<br>正经话都要悄悄讲<br>把它们藏在聊天室中<br>藏在电话线和围巾里<br>藏在一百单八将周通和那块小石头上<br>藏在背后和心底的最深处<br>它们像小溪一样潺潺流动<br>像星星一样忽明忽暗<br>那时青春的絮语<br>低低的轻轻的<br>融化真心破冰而出    </p><p><strong><em>未完待续…</em></strong></p>]]></content>
      
      
      <categories>
          
          <category> emotion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂啊 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅学android studio</title>
      <link href="/%E6%B5%85%E5%AD%A6android%20studio/"/>
      <url>/%E6%B5%85%E5%AD%A6android%20studio/</url>
      
        <content type="html"><![CDATA[<h4 id="app目录"><a href="#app目录" class="headerlink" title="app目录"></a>app目录</h4><ul><li>build:构建目录    </li><li>src:      <ul><li>androidTest : 安卓单元测试的目录   </li><li>main    <ul><li>Java:写Java文件的地方，将activity创立在此文件夹下          </li><li>layout:布局资源      </li><li>menu:菜单资源     </li><li>value:      <ul><li>dinmens:css配置文件     </li><li>string:字符串资源</li><li>style:style资源</li></ul></li></ul></li></ul></li><li>AndroidMainifest.xml:配置文件（声明应用程序中所用的组件）    <ul><li>android:icon 指出位于res/mipmap-hdpi下应用程序图标，这个应用使用该图标</li><li>android:name 指定一个Activity类子类的全名</li><li>android:label 指定用于活动名称的字符串</li><li>android.intent.action.MAIN 意图过滤器的action，表明这个活动被用作应用程序的入口</li><li>android.intent.category.LAUNCHER 意图过滤器的category,表明应用程序可以通过设备启动器的图标来启动</li><li>@string 指的是strings.xml</li></ul></li><li>build.grade:Gradle构建脚本</li><li>Strings文件：包含应用程序使用到的所有文本</li><li>R文件：自动生成</li><li>Layout文件    <ul><li>activity_main.xml是一个在res/layout目录下的layout文件</li><li>TextView: Android的控件用于构建用户图形界面    <ul><li>android: layout_width</li><li>android: layout_height</li><li>……</li></ul></li></ul></li></ul><p><strong><em>未完待续。。</em></strong></p>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浮点数的比较</title>
      <link href="/%E7%AC%A6%E7%82%B9%E6%95%B0%E7%9A%84%E6%AF%94%E8%BE%83/"/>
      <url>/%E7%AC%A6%E7%82%B9%E6%95%B0%E7%9A%84%E6%AF%94%E8%BE%83/</url>
      
        <content type="html"><![CDATA[<h3 id="浮点数的比较"><a href="#浮点数的比较" class="headerlink" title="浮点数的比较"></a>浮点数的比较</h3><blockquote><p>由于计算机中采用有限位的二进制编码，因此浮点数在计算机中的存储并不总是精确的.所以进行比较时需要 <strong><em>引入一个极小数eps来对误差进行修正</em></strong></p></blockquote><hr><h4 id="等于运算符（"><a href="#等于运算符（" class="headerlink" title="等于运算符（==)"></a>等于运算符（==)</h4><p>如果一个数落在了[b-eps,b+eps]的区间内，判定 a==b 成立。<br>一般eps取 10^-8 。因此可以将eps定义为常量1e-8:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const double eps = 1e-8;</span><br></pre></td></tr></table></figure><p>为了使比较更加方便，把比较操作写成宏定义的形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define Equ(a,b)((fabs((a)-(b)))&lt;(eps))</span><br></pre></td></tr></table></figure><p>将a和b相减，如果差的绝对值小于极小量，就返回true</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio&gt;</span><br><span class="line">#include &lt;math.h&gt;</span><br><span class="line">const double eps = 1e-8;</span><br><span class="line">#define Equ(a,b)((fabs((a)-(b)))&lt;(eps))</span><br><span class="line">int main&#123;</span><br><span class="line">    double db = 1.23;</span><br><span class="line">    if(Eue(db, 1.23)&#123;</span><br><span class="line">        printf(&quot;true&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        printf(&quot;false&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="大于运算符（-gt-）"><a href="#大于运算符（-gt-）" class="headerlink" title="大于运算符（&gt;）"></a>大于运算符（&gt;）</h4><p>一个数a要大于b，那么就必须使a-b大于eps</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define Equ(a,b)((fabs((a)-(b)))&gt;(eps))</span><br></pre></td></tr></table></figure><h4 id="小于运算符（-lt-）"><a href="#小于运算符（-lt-）" class="headerlink" title="小于运算符（&lt;）"></a>小于运算符（&lt;）</h4><p>一个数a要小于b，那么就必须使a-b小于-eps</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define Equ(a,b)((fabs((a)-(b)))&lt;(-eps))</span><br></pre></td></tr></table></figure><h4 id="大于等于运算符（-gt-）"><a href="#大于等于运算符（-gt-）" class="headerlink" title="大于等于运算符（&gt;=）"></a>大于等于运算符（&gt;=）</h4><p>大于b-eps的数都应认为是大于等于b的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define Equ(a,b)((fabs((a)-(b)))&gt;(-eps))</span><br></pre></td></tr></table></figure><h4 id="小于等于运算符（-lt-）"><a href="#小于等于运算符（-lt-）" class="headerlink" title="小于等于运算符（&lt;=）"></a>小于等于运算符（&lt;=）</h4><p>小于b+eps的数都应认为是小于于等于b的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define Equ(a,b)((fabs((a)-(b)))&lt;(eps))</span><br></pre></td></tr></table></figure><h4 id="圆周率π"><a href="#圆周率π" class="headerlink" title="圆周率π"></a>圆周率π</h4><p>由cos(π) = -1 可得 π = arccos(-1)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const double Pi = acos(-1.0)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法笔记 </tag>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="/markdown%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/markdown%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>Markdown 是一种非常简单的排版语法，几分钟就能够基本掌握。使用 Markdown 语法来编写博客将是一件非常惬意的事，你从此不需要为了各种各样的排版效果而浪费精力，而是将注意力集中在编写内容本身。</p><ul><li>基本 Markdown 语法</li><li>各种语言的代码渲染</li><li>LaTeX 数学公式渲染</li></ul><h2 id="基本-Markdown-语法"><a href="#基本-Markdown-语法" class="headerlink" title="基本 Markdown 语法"></a>基本 Markdown 语法</h2><blockquote><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— <a href="https://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener">维基百科</a></p></blockquote><p>详细语法请参考<a href="http://wowubuntu.com/markdown/" target="_blank" rel="noopener">《Markdown 语法说明》</a>。</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><div class="table-container"><table><thead><tr><th style="text-align:left">项目</th><th style="text-align:right">价格</th><th style="text-align:center">数量</th></tr></thead><tbody><tr><td style="text-align:left">Computer</td><td style="text-align:right">1600 元</td><td style="text-align:center">5</td></tr><tr><td style="text-align:left">Phone</td><td style="text-align:right">12 元</td><td style="text-align:center">12</td></tr><tr><td style="text-align:left">Pipe</td><td style="text-align:right">1 元</td><td style="text-align:center">234</td></tr></tbody></table></div><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><ul><li>汽车</li><li>飞机</li><li>火车</li></ul><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><ol><li>汽车</li><li>飞机</li><li>火车</li></ol><h4 id="嵌套列表"><a href="#嵌套列表" class="headerlink" title="嵌套列表"></a>嵌套列表</h4><ul><li>交通工具<ul><li>汽车<ul><li>轿车</li><li>客车</li></ul></li><li>飞机</li><li>火车</li></ul></li><li>可选线路<ul><li>线路1</li><li>线路2</li></ul></li></ul><h2 id="各种语言的代码渲染"><a href="#各种语言的代码渲染" class="headerlink" title="各种语言的代码渲染"></a>各种语言的代码渲染</h2><p>本博客使用 <a href="https://highlightjs.org/" target="_blank" rel="noopener">highlight.js</a> 对代码进行进行渲染，选用的主题为 Google code 主题，下面为展示效果：</p><p><strong>C</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello World!/n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hello</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String ars[])</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.print(<span class="string">"Hello World!/n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="LaTeX-数学公式渲染"><a href="#LaTeX-数学公式渲染" class="headerlink" title="LaTeX 数学公式渲染"></a>LaTeX 数学公式渲染</h2><p>本博客使用 <a href="https://www.mathjax.org/" target="_blank" rel="noopener">MathJax</a> 对 LaTex 格式的数学公式进行渲染，下面为展示效果：</p><p>同时支持行内公式 $\sqrt{a+b}$ 和行间公式</p><script type="math/tex; mode=display">x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}</script>]]></content>
      
      
      <categories>
          
          <category> technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
